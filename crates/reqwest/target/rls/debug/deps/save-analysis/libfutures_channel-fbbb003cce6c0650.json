{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5","program":"C:\\Users\\rahul.damani\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","futures_channel","C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=fbbb003cce6c0650","-C","extra-filename=-fbbb003cce6c0650","--out-dir","c:\\Users\\rahul.damani\\Downloads\\code\\rust\\crates\\reqwest\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\rahul.damani\\Downloads\\code\\rust\\crates\\reqwest\\target\\rls\\debug\\deps","--extern","futures_core=c:\\Users\\rahul.damani\\Downloads\\code\\rust\\crates\\reqwest\\target\\rls\\debug\\deps\\libfutures_core-a2c7a4594d1a789d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\rahul.damani\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\rahul.damani\\Downloads\\code\\rust\\crates\\reqwest\\target\\rls\\debug\\deps\\libfutures_channel-fbbb003cce6c0650.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[3962738124946428853,7946969727346710658]},"crate_root":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src","external_crates":[{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[14664243863007151186,13029296787848565560]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","num":2,"id":{"name":"core","disambiguator":[10973483057139175867,4092977820595504105]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5344968526663694908,5854973613798060781]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14551701718388451589,8584422242678588409]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6143882857039415599,5494129795406748407]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[9037026435662606504,10577775618308791929]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15244332605556921560,15997253764330093455]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[496393125628069379,10121348063997143337]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14891368759234060001,17337422003014977783]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9539026828135594574,18385042694178804316]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[5817650502020334249,13012108553651615857]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12364111099303107650,4225371417860886929]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[1593379990131481620,6691744023912804689]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","num":14,"id":{"name":"futures_core","disambiguator":[3197750928868398318,17562369419528704093]}}],"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":1450,"line_start":1,"line_end":42,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":1450,"line_start":1,"line_end":42,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":34},{"krate":0,"index":252}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","byte_start":407,"byte_end":495,"line_start":13,"line_end":13,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","byte_start":663,"byte_end":684,"line_start":16,"line_end":16,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":340},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":354},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":90},{"krate":0,"index":369},{"krate":0,"index":380},{"krate":0,"index":378},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":382},{"krate":0,"index":397},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":400},{"krate":0,"index":413},{"krate":0,"index":411},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":415},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":441},{"krate":0,"index":439},{"krate":0,"index":438},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":139},{"krate":0,"index":153},{"krate":0,"index":167},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":251}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","byte_start":1356,"byte_end":1379,"line_start":38,"line_end":38,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600272,"byte_end":7600278,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600470,"byte_end":7600485,"line_start":131,"line_end":131,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600757,"byte_end":7600765,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":359}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600967,"byte_end":7600984,"line_start":148,"line_end":148,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":365}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7601261,"byte_end":7601270,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":370}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7601409,"byte_end":7601421,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7601631,"byte_end":7601643,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":93}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7602093,"byte_end":7602100,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7602317,"byte_end":7602332,"line_start":201,"line_end":201,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603157,"byte_end":7603164,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603307,"byte_end":7603322,"line_start":236,"line_end":236,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603463,"byte_end":7603473,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603581,"byte_end":7603596,"line_start":246,"line_end":246,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"fn (self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7607007,"byte_end":7607014,"line_start":363,"line_end":363,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"fn <T> (buffer: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7608278,"byte_end":7608287,"line_start":400,"line_end":400,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"fn <T> () -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7618699,"byte_end":7618707,"line_start":712,"line_end":712,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn (&mut self, msg: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7619268,"byte_end":7619278,"line_start":730,"line_end":730,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"fn (&mut self, msg: T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7619906,"byte_end":7619916,"line_start":747,"line_end":747,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7620241,"byte_end":7620250,"line_start":758,"line_end":758,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7620440,"byte_end":7620453,"line_start":763,"line_end":763,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7620669,"byte_end":7620679,"line_start":770,"line_end":770,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7620797,"byte_end":7620810,"line_start":775,"line_end":775,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7621053,"byte_end":7621066,"line_start":783,"line_end":783,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"fn <H> (&self, hasher: &mut H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7621347,"byte_end":7621357,"line_start":793,"line_end":793,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"fn (&self, _: &mut Context<'_>) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7621678,"byte_end":7621687,"line_start":804,"line_end":804,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7621879,"byte_end":7621892,"line_start":809,"line_end":809,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7622100,"byte_end":7622110,"line_start":816,"line_end":816,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7622827,"byte_end":7622837,"line_start":841,"line_end":841,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"fn (&mut self, msg: T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7623202,"byte_end":7623216,"line_start":851,"line_end":851,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"fn (&self, msg: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7623375,"byte_end":7623388,"line_start":856,"line_end":856,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7623631,"byte_end":7623644,"line_start":864,"line_end":864,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"fn <H> (&self, hasher: &mut H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7627225,"byte_end":7627230,"line_start":981,"line_end":981,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7628013,"byte_end":7628021,"line_start":1001,"line_end":1001,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"fn (&mut self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7632054,"byte_end":7632059,"line_start":1117,"line_end":1117,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7632561,"byte_end":7632569,"line_start":1131,"line_end":1131,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"fn (&mut self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":263},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":460},{"krate":0,"index":466},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":281},{"krate":0,"index":287},{"krate":0,"index":469},{"krate":0,"index":473},{"krate":0,"index":290},{"krate":0,"index":477},{"krate":0,"index":488},{"krate":0,"index":487},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":479},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":301},{"krate":0,"index":305}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","byte_start":1402,"byte_end":1427,"line_start":40,"line_end":40,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7644499,"byte_end":7644507,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":450}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7644403,"byte_end":7644470,"line_start":16,"line_end":16,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7644683,"byte_end":7644689,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":456}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7647705,"byte_end":7647712,"line_start":103,"line_end":103,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"fn <T> () -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending values across asynchronous tasks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7657009,"byte_end":7657013,"line_start":342,"line_end":342,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (self, t: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7657670,"byte_end":7657683,"line_start":358,"line_end":358,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) with has been dropped.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7658048,"byte_end":7658060,"line_start":367,"line_end":367,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"fn (&mut self) -> Cancellation<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7658484,"byte_end":7658495,"line_start":377,"line_end":377,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7658915,"byte_end":7658927,"line_start":393,"line_end":393,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":472}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7658819,"byte_end":7658886,"line_start":391,"line_end":391,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7659317,"byte_end":7659325,"line_start":408,"line_end":408,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7659933,"byte_end":7659938,"line_start":427,"line_end":427,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7660369,"byte_end":7660377,"line_start":439,"line_end":439,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","byte_start":7592989,"byte_end":7592993,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","byte_start":7593030,"byte_end":7593034,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","byte_start":7593050,"byte_end":7593054,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","byte_start":7593895,"byte_end":7593902,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","byte_start":7594155,"byte_end":7594162,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","byte_start":7594525,"byte_end":7594532,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\queue.rs","byte_start":7640488,"byte_end":7640493,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\queue.rs","byte_start":7640531,"byte_end":7640536,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\queue.rs","byte_start":7640553,"byte_end":7640557,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\queue.rs","byte_start":7640753,"byte_end":7640758,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\queue.rs","byte_start":7643660,"byte_end":7643665,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600053,"byte_end":7600073,"line_start":118,"line_end":118,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600098,"byte_end":7600116,"line_start":119,"line_end":119,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600587,"byte_end":7600602,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7601126,"byte_end":7601143,"line_start":153,"line_end":153,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7601686,"byte_end":7601695,"line_start":179,"line_end":179,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7601975,"byte_end":7601984,"line_start":189,"line_end":189,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7601994,"byte_end":7602003,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7602491,"byte_end":7602503,"line_start":209,"line_end":209,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7602710,"byte_end":7602722,"line_start":217,"line_end":217,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603024,"byte_end":7603036,"line_start":227,"line_end":227,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603052,"byte_end":7603064,"line_start":229,"line_end":229,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603664,"byte_end":7603676,"line_start":251,"line_end":251,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603833,"byte_end":7603845,"line_start":258,"line_end":258,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603994,"byte_end":7604006,"line_start":264,"line_end":264,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7606102,"byte_end":7606112,"line_start":335,"line_end":335,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7608787,"byte_end":7608807,"line_start":426,"line_end":426,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7611488,"byte_end":7611506,"line_start":507,"line_end":507,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7618570,"byte_end":7618576,"line_start":709,"line_end":709,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7621255,"byte_end":7621270,"line_start":791,"line_end":791,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7623843,"byte_end":7623849,"line_start":872,"line_end":872,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7623948,"byte_end":7623963,"line_start":878,"line_end":878,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7624080,"byte_end":7624100,"line_start":884,"line_end":884,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7625176,"byte_end":7625194,"line_start":915,"line_end":915,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7626408,"byte_end":7626428,"line_start":948,"line_end":948,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7626673,"byte_end":7626691,"line_start":959,"line_end":959,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7626970,"byte_end":7626978,"line_start":976,"line_end":976,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7630473,"byte_end":7630481,"line_start":1065,"line_end":1065,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7630513,"byte_end":7630521,"line_start":1067,"line_end":1067,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7630622,"byte_end":7630630,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7631510,"byte_end":7631518,"line_start":1100,"line_end":1100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7631790,"byte_end":7631807,"line_start":1112,"line_end":1112,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7634506,"byte_end":7634523,"line_start":1181,"line_end":1181,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7634624,"byte_end":7634641,"line_start":1187,"line_end":1187,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7635517,"byte_end":7635534,"line_start":1214,"line_end":1214,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7635846,"byte_end":7635860,"line_start":1232,"line_end":1232,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7636143,"byte_end":7636155,"line_start":1244,"line_end":1244,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7636681,"byte_end":7636695,"line_start":1262,"line_end":1262,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7636732,"byte_end":7636746,"line_start":1263,"line_end":1263,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7636784,"byte_end":7636796,"line_start":1265,"line_end":1265,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7636833,"byte_end":7636845,"line_start":1266,"line_end":1266,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7644797,"byte_end":7644805,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7644830,"byte_end":7644836,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7647937,"byte_end":7647942,"line_start":114,"line_end":114,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7656471,"byte_end":7656477,"line_start":331,"line_end":331,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7658572,"byte_end":7658578,"line_start":382,"line_end":382,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7658989,"byte_end":7659001,"line_start":397,"line_end":397,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7659350,"byte_end":7659358,"line_start":410,"line_end":410,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7659522,"byte_end":7659530,"line_start":417,"line_end":417,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7659543,"byte_end":7659551,"line_start":419,"line_end":419,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7660480,"byte_end":7660488,"line_start":444,"line_end":444,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7660698,"byte_end":7660706,"line_start":455,"line_end":455,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","byte_start":1392,"byte_end":1396,"line_start":39,"line_end":39,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lib.rs","byte_start":1440,"byte_end":1447,"line_start":41,"line_end":41,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":252}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","byte_start":7592989,"byte_end":7592993,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":308},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","byte_start":7593030,"byte_end":7593034,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":308},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","byte_start":7593050,"byte_end":7593054,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","byte_start":7593895,"byte_end":7593902,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","byte_start":7594155,"byte_end":7594162,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":1715}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\lock.rs","byte_start":7594525,"byte_end":7594532,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\queue.rs","byte_start":7640488,"byte_end":7640493,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":322},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\queue.rs","byte_start":7640531,"byte_end":7640536,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":322},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\queue.rs","byte_start":7640553,"byte_end":7640557,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\queue.rs","byte_start":7640753,"byte_end":7640758,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\queue.rs","byte_start":7643660,"byte_end":7643665,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":322},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600053,"byte_end":7600073,"line_start":118,"line_end":118,"column_start":19,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600098,"byte_end":7600116,"line_start":119,"line_end":119,"column_start":19,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600543,"byte_end":7600547,"line_start":133,"line_end":133,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1533},"to":{"krate":0,"index":88}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600550,"byte_end":7600554,"line_start":133,"line_end":133,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1545},"to":{"krate":0,"index":88}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600557,"byte_end":7600562,"line_start":133,"line_end":133,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":88}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7600587,"byte_end":7600602,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":350},"to":{"krate":0,"index":88}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7601126,"byte_end":7601143,"line_start":153,"line_end":153,"column_start":19,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7601686,"byte_end":7601695,"line_start":179,"line_end":179,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7601975,"byte_end":7601984,"line_start":189,"line_end":189,"column_start":28,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":369},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7601994,"byte_end":7602003,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7602491,"byte_end":7602503,"line_start":209,"line_end":209,"column_start":24,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":382},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7602710,"byte_end":7602722,"line_start":217,"line_end":217,"column_start":26,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":382},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603024,"byte_end":7603036,"line_start":227,"line_end":227,"column_start":47,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":382},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603052,"byte_end":7603064,"line_start":229,"line_end":229,"column_start":9,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603664,"byte_end":7603676,"line_start":251,"line_end":251,"column_start":21,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603833,"byte_end":7603845,"line_start":258,"line_end":258,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7603994,"byte_end":7604006,"line_start":264,"line_end":264,"column_start":28,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":92},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7606102,"byte_end":7606112,"line_start":335,"line_end":335,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7608787,"byte_end":7608807,"line_start":426,"line_end":426,"column_start":9,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7611488,"byte_end":7611506,"line_start":507,"line_end":507,"column_start":9,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7618570,"byte_end":7618576,"line_start":709,"line_end":709,"column_start":9,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7621255,"byte_end":7621270,"line_start":791,"line_end":791,"column_start":9,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7623843,"byte_end":7623849,"line_start":872,"line_end":872,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7623948,"byte_end":7623963,"line_start":878,"line_end":878,"column_start":19,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":350},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7624080,"byte_end":7624100,"line_start":884,"line_end":884,"column_start":19,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7625176,"byte_end":7625194,"line_start":915,"line_end":915,"column_start":19,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7626408,"byte_end":7626428,"line_start":948,"line_end":948,"column_start":18,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7626673,"byte_end":7626691,"line_start":959,"line_end":959,"column_start":18,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7626970,"byte_end":7626978,"line_start":976,"line_end":976,"column_start":9,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7630473,"byte_end":7630481,"line_start":1065,"line_end":1065,"column_start":19,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7630513,"byte_end":7630521,"line_start":1067,"line_end":1067,"column_start":25,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":357},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7630622,"byte_end":7630630,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":357},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7631510,"byte_end":7631518,"line_start":1100,"line_end":1100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7631790,"byte_end":7631807,"line_start":1112,"line_end":1112,"column_start":9,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7634506,"byte_end":7634523,"line_start":1181,"line_end":1181,"column_start":25,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":363},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7634624,"byte_end":7634641,"line_start":1187,"line_end":1187,"column_start":20,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":363},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7635517,"byte_end":7635534,"line_start":1214,"line_end":1214,"column_start":18,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7635846,"byte_end":7635860,"line_start":1232,"line_end":1232,"column_start":9,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7636143,"byte_end":7636155,"line_start":1244,"line_end":1244,"column_start":9,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7636681,"byte_end":7636695,"line_start":1262,"line_end":1262,"column_start":31,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":415},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7636732,"byte_end":7636746,"line_start":1263,"line_end":1263,"column_start":31,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":415},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7636784,"byte_end":7636796,"line_start":1265,"line_end":1265,"column_start":31,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\mpsc\\mod.rs","byte_start":7636833,"byte_end":7636845,"line_start":1266,"line_end":1266,"column_start":31,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7644797,"byte_end":7644805,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7644830,"byte_end":7644836,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7647937,"byte_end":7647942,"line_start":114,"line_end":114,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7656471,"byte_end":7656477,"line_start":331,"line_end":331,"column_start":9,"column_end":15},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7658572,"byte_end":7658578,"line_start":382,"line_end":382,"column_start":18,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7658989,"byte_end":7659001,"line_start":397,"line_end":397,"column_start":20,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":7938}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7659350,"byte_end":7659358,"line_start":410,"line_end":410,"column_start":23,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":477},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7659522,"byte_end":7659530,"line_start":417,"line_end":417,"column_start":28,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":477},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7659543,"byte_end":7659551,"line_start":419,"line_end":419,"column_start":9,"column_end":17},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7660480,"byte_end":7660488,"line_start":444,"line_end":444,"column_start":20,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":7938}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.5\\src\\oneshot.rs","byte_start":7660698,"byte_end":7660706,"line_start":455,"line_end":455,"column_start":18,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1726}}]}