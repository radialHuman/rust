{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12","program":"C:\\Users\\rahul.damani\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bstr","C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"regex-automata\"","--cfg","feature=\"serde\"","--cfg","feature=\"serde1\"","--cfg","feature=\"serde1-nostd\"","--cfg","feature=\"std\"","--cfg","feature=\"unicode\"","-C","metadata=7ab04b5e88c1e469","-C","extra-filename=-7ab04b5e88c1e469","--out-dir","c:\\Users\\rahul.damani\\Downloads\\code\\rust\\eda_1\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\rahul.damani\\Downloads\\code\\rust\\eda_1\\target\\rls\\debug\\deps","--extern","lazy_static=c:\\Users\\rahul.damani\\Downloads\\code\\rust\\eda_1\\target\\rls\\debug\\deps\\liblazy_static-1116bd7b69241656.rmeta","--extern","memchr=c:\\Users\\rahul.damani\\Downloads\\code\\rust\\eda_1\\target\\rls\\debug\\deps\\libmemchr-0ecea4765e1137ef.rmeta","--extern","regex_automata=c:\\Users\\rahul.damani\\Downloads\\code\\rust\\eda_1\\target\\rls\\debug\\deps\\libregex_automata-8aab9f927f99c313.rmeta","--extern","serde=c:\\Users\\rahul.damani\\Downloads\\code\\rust\\eda_1\\target\\rls\\debug\\deps\\libserde-09012e8ca17692ab.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\rahul.damani\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\rahul.damani\\Downloads\\code\\rust\\eda_1\\target\\rls\\debug\\deps\\libbstr-7ab04b5e88c1e469.rmeta"},"prelude":{"crate_id":{"name":"bstr","disambiguator":[13096643282512007232,12219963730107848273]},"crate_root":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src","external_crates":[{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[14664243863007151186,13029296787848565560]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10973483057139175867,4092977820595504105]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5344968526663694908,5854973613798060781]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14551701718388451589,8584422242678588409]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6143882857039415599,5494129795406748407]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[9037026435662606504,10577775618308791929]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15244332605556921560,15997253764330093455]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[496393125628069379,10121348063997143337]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14891368759234060001,17337422003014977783]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9539026828135594574,18385042694178804316]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[5817650502020334249,13012108553651615857]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12364111099303107650,4225371417860886929]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[1593379990131481620,6691744023912804689]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":14,"id":{"name":"lazy_static","disambiguator":[10027080572930435518,5122013558326521586]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":15,"id":{"name":"memchr","disambiguator":[2513887644139780721,18200980064009504896]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":16,"id":{"name":"regex_automata","disambiguator":[8616263559677949993,11298360261266427647]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":17,"id":{"name":"byteorder","disambiguator":[4774801759518926921,18058406124570237986]}},{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","num":18,"id":{"name":"serde","disambiguator":[13380051698231158325,13214176839192572603]}}],"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":0,"byte_end":20276,"line_start":1,"line_end":456,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18560,"byte_end":18564,"line_start":389,"line_end":389,"column_start":15,"column_end":19},"alias_span":null,"name":"BStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18607,"byte_end":18614,"line_start":391,"line_end":391,"column_start":18,"column_end":25},"alias_span":null,"name":"BString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18641,"byte_end":18650,"line_start":393,"line_end":393,"column_start":5,"column_end":14},"alias_span":null,"name":"ByteSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18652,"byte_end":18657,"line_start":393,"line_end":393,"column_start":16,"column_end":21},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18659,"byte_end":18665,"line_start":393,"line_end":393,"column_start":23,"column_end":29},"alias_span":null,"name":"Fields","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18667,"byte_end":18677,"line_start":393,"line_end":393,"column_start":31,"column_end":41},"alias_span":null,"name":"FieldsWith","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18679,"byte_end":18683,"line_start":393,"line_end":393,"column_start":43,"column_end":47},"alias_span":null,"name":"Find","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18685,"byte_end":18696,"line_start":393,"line_end":393,"column_start":49,"column_end":60},"alias_span":null,"name":"FindReverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18698,"byte_end":18704,"line_start":393,"line_end":393,"column_start":62,"column_end":68},"alias_span":null,"name":"Finder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18710,"byte_end":18723,"line_start":394,"line_end":394,"column_start":5,"column_end":18},"alias_span":null,"name":"FinderReverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18725,"byte_end":18730,"line_start":394,"line_end":394,"column_start":20,"column_end":25},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18732,"byte_end":18751,"line_start":394,"line_end":394,"column_start":27,"column_end":46},"alias_span":null,"name":"LinesWithTerminator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18753,"byte_end":18758,"line_start":394,"line_end":394,"column_start":48,"column_end":53},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18760,"byte_end":18766,"line_start":394,"line_end":394,"column_start":55,"column_end":61},"alias_span":null,"name":"SplitN","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18768,"byte_end":18781,"line_start":394,"line_end":394,"column_start":63,"column_end":76},"alias_span":null,"name":"SplitNReverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18787,"byte_end":18799,"line_start":395,"line_end":395,"column_start":5,"column_end":17},"alias_span":null,"name":"SplitReverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18801,"byte_end":18802,"line_start":395,"line_end":395,"column_start":19,"column_end":20},"alias_span":null,"name":"B","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18849,"byte_end":18855,"line_start":398,"line_end":398,"column_start":19,"column_end":25},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18857,"byte_end":18861,"line_start":398,"line_end":398,"column_start":27,"column_end":31},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18863,"byte_end":18870,"line_start":398,"line_end":398,"column_start":33,"column_end":40},"alias_span":null,"name":"ByteVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18872,"byte_end":18882,"line_start":398,"line_end":398,"column_start":42,"column_end":52},"alias_span":null,"name":"DrainBytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18884,"byte_end":18897,"line_start":398,"line_end":398,"column_start":54,"column_end":67},"alias_span":null,"name":"FromUtf8Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1662},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18951,"byte_end":18966,"line_start":401,"line_end":401,"column_start":5,"column_end":20},"alias_span":null,"name":"GraphemeIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1653},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18968,"byte_end":18977,"line_start":401,"line_end":401,"column_start":22,"column_end":31},"alias_span":null,"name":"Graphemes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18979,"byte_end":18994,"line_start":401,"line_end":401,"column_start":33,"column_end":48},"alias_span":null,"name":"SentenceIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18996,"byte_end":19005,"line_start":401,"line_end":401,"column_start":50,"column_end":59},"alias_span":null,"name":"Sentences","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19007,"byte_end":19018,"line_start":401,"line_end":401,"column_start":61,"column_end":72},"alias_span":null,"name":"WordIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19024,"byte_end":19029,"line_start":402,"line_end":402,"column_start":5,"column_end":10},"alias_span":null,"name":"Words","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1721},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19031,"byte_end":19052,"line_start":402,"line_end":402,"column_start":12,"column_end":33},"alias_span":null,"name":"WordsWithBreakIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19054,"byte_end":19069,"line_start":402,"line_end":402,"column_start":35,"column_end":50},"alias_span":null,"name":"WordsWithBreaks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19094,"byte_end":19100,"line_start":405,"line_end":405,"column_start":5,"column_end":11},"alias_span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19104,"byte_end":19115,"line_start":405,"line_end":405,"column_start":15,"column_end":26},"name":"decode_utf8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19117,"byte_end":19128,"line_start":405,"line_end":405,"column_start":28,"column_end":39},"alias_span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19132,"byte_end":19148,"line_start":405,"line_end":405,"column_start":43,"column_end":59},"name":"decode_last_utf8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1740},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19150,"byte_end":19161,"line_start":405,"line_end":405,"column_start":61,"column_end":72},"alias_span":null,"name":"CharIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19167,"byte_end":19172,"line_start":406,"line_end":406,"column_start":5,"column_end":10},"alias_span":null,"name":"Chars","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19174,"byte_end":19183,"line_start":406,"line_end":406,"column_start":12,"column_end":21},"alias_span":null,"name":"Utf8Chunk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1751},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19185,"byte_end":19195,"line_start":406,"line_end":406,"column_start":23,"column_end":33},"alias_span":null,"name":"Utf8Chunks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1760},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19197,"byte_end":19206,"line_start":406,"line_end":406,"column_start":35,"column_end":44},"alias_span":null,"name":"Utf8Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":0,"byte_end":20276,"line_start":1,"line_end":456,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":41},{"krate":0,"index":49},{"krate":0,"index":61},{"krate":0,"index":71},{"krate":0,"index":77},{"krate":0,"index":120},{"krate":0,"index":138},{"krate":0,"index":413},{"krate":0,"index":506},{"krate":0,"index":738},{"krate":0,"index":757},{"krate":0,"index":818},{"krate":0,"index":946}],"decl_id":null,"docs":"An experimental byte string library.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":18193,"byte_end":18213,"line_start":370,"line_end":370,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\bstr.rs","byte_start":33513,"byte_end":33517,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"BStr","qualname":"::bstr::BStr","value":"BStr {  }","parent":null,"children":[{"krate":0,"index":1021}],"decl_id":null,"docs":" A wrapper for `&[u8]` that provides convenient string oriented trait impls.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\bstr.rs","byte_start":33481,"byte_end":33501,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\bstring.rs","byte_start":35567,"byte_end":35574,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"BString","qualname":"::bstring::BString","value":"BString {  }","parent":null,"children":[{"krate":0,"index":1026}],"decl_id":null,"docs":" A wrapper for `Vec<u8>` that provides convenient string oriented trait\n impls.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":53466,"byte_end":53467,"line_start":76,"line_end":76,"column_start":8,"column_end":9},"name":"B","qualname":"::ext_slice::B","value":"fn <'a, B> (bytes: &'a B) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" A short-hand constructor for building a `&[u8]`.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":53424,"byte_end":53448,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":53449,"byte_end":53458,"line_start":75,"line_end":75,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":53840,"byte_end":53846,"line_start":94,"line_end":94,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::ext_slice::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" Ensure that callers cannot implement `ByteSlice` by making an\n umplementable trait its super trait.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":53948,"byte_end":53957,"line_start":98,"line_end":98,"column_start":11,"column_end":20},"name":"ByteSlice","qualname":"::ext_slice::ByteSlice","value":"ByteSlice: Sealed","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":302}],"decl_id":null,"docs":" A trait that extends `&[u8]` with string oriented methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":54183,"byte_end":54191,"line_start":103,"line_end":103,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::ext_slice::ByteSlice::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" A method for accessing the raw bytes of this type. This is always a\n no-op and callers shouldn't care about it. This only exists for making\n the extension trait work.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":54434,"byte_end":54446,"line_start":109,"line_end":109,"column_start":8,"column_end":20},"name":"as_bytes_mut","qualname":"::ext_slice::ByteSlice::as_bytes_mut","value":"fn (&mut self) -> &mut [u8]","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" A method for accessing the raw bytes of this type, mutably. This is\n always a no-op and callers shouldn't care about it. This only exists\n for making the extension trait work.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":55033,"byte_end":55040,"line_start":128,"line_end":128,"column_start":8,"column_end":15},"name":"as_bstr","qualname":"::ext_slice::ByteSlice::as_bstr","value":"fn (&self) -> &BStr","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Return this byte slice as a `&BStr`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":55710,"byte_end":55721,"line_start":150,"line_end":150,"column_start":8,"column_end":19},"name":"as_bstr_mut","qualname":"::ext_slice::ByteSlice::as_bstr_mut","value":"fn (&mut self) -> &mut BStr","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Return this byte slice as a `&mut BStr`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":56565,"byte_end":56576,"line_start":177,"line_end":177,"column_start":8,"column_end":19},"name":"from_os_str","qualname":"::ext_slice::ByteSlice::from_os_str","value":"fn (os_str: &OsStr) -> Option<&[u8]>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Create an immutable byte string from an OS string slice.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":56520,"byte_end":56543,"line_start":175,"line_end":175,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":56548,"byte_end":56557,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":57717,"byte_end":57726,"line_start":217,"line_end":217,"column_start":8,"column_end":17},"name":"from_path","qualname":"::ext_slice::ByteSlice::from_path","value":"fn (path: &Path) -> Option<&[u8]>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Create an immutable byte string from a file path.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":57672,"byte_end":57695,"line_start":215,"line_end":215,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":57700,"byte_end":57709,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":58846,"byte_end":58852,"line_start":250,"line_end":250,"column_start":8,"column_end":14},"name":"to_str","qualname":"::ext_slice::ByteSlice::to_str","value":"fn (&self) -> Result<&str, Utf8Error>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Safely convert this byte string into a `&str` if it's valid UTF-8.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":58829,"byte_end":58838,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":60127,"byte_end":60143,"line_start":284,"line_end":284,"column_start":15,"column_end":31},"name":"to_str_unchecked","qualname":"::ext_slice::ByteSlice::to_str_unchecked","value":"fn (&self) -> &str","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Unsafely convert this byte string into a `&str`, without checking for\n valid UTF-8.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":63029,"byte_end":63041,"line_start":349,"line_end":349,"column_start":8,"column_end":20},"name":"to_str_lossy","qualname":"::ext_slice::ByteSlice::to_str_lossy","value":"fn (&self) -> Cow<str>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Convert this byte string to a valid UTF-8 string by replacing invalid\n UTF-8 bytes with the Unicode replacement codepoint (`U+FFFD`).","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":62984,"byte_end":63007,"line_start":347,"line_end":347,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":63012,"byte_end":63021,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":65200,"byte_end":65217,"line_start":406,"line_end":406,"column_start":8,"column_end":25},"name":"to_str_lossy_into","qualname":"::ext_slice::ByteSlice::to_str_lossy_into","value":"fn (&self, dest: &mut String) -> ()","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Copy the contents of this byte string into the given owned string\n buffer, while replacing invalid UTF-8 code unit sequences with the\n Unicode replacement codepoint (`U+FFFD`).","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":65155,"byte_end":65178,"line_start":404,"line_end":404,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":65183,"byte_end":65192,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":67011,"byte_end":67020,"line_start":453,"line_end":453,"column_start":8,"column_end":17},"name":"to_os_str","qualname":"::ext_slice::ByteSlice::to_os_str","value":"fn (&self) -> Result<&OsStr, Utf8Error>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Create an OS string slice from this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":66966,"byte_end":66989,"line_start":451,"line_end":451,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":66994,"byte_end":67003,"line_start":452,"line_end":452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":68235,"byte_end":68250,"line_start":493,"line_end":493,"column_start":8,"column_end":23},"name":"to_os_str_lossy","qualname":"::ext_slice::ByteSlice::to_os_str_lossy","value":"fn (&self) -> Cow<OsStr>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Lossily create an OS string slice from this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":68190,"byte_end":68213,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":68218,"byte_end":68227,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":69581,"byte_end":69588,"line_start":537,"line_end":537,"column_start":8,"column_end":15},"name":"to_path","qualname":"::ext_slice::ByteSlice::to_path","value":"fn (&self) -> Result<&Path, Utf8Error>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Create a path slice from this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":69536,"byte_end":69559,"line_start":535,"line_end":535,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":69564,"byte_end":69573,"line_start":536,"line_end":536,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":70466,"byte_end":70479,"line_start":564,"line_end":564,"column_start":8,"column_end":21},"name":"to_path_lossy","qualname":"::ext_slice::ByteSlice::to_path_lossy","value":"fn (&self) -> Cow<Path>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Lossily create a path slice from this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":70421,"byte_end":70444,"line_start":562,"line_end":562,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":70449,"byte_end":70458,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":71193,"byte_end":71200,"line_start":592,"line_end":592,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::ext_slice::ByteSlice::repeatn","value":"fn (&self, n: usize) -> Vec<u8>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Create a new byte string by repeating this byte string `n` times.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":71148,"byte_end":71171,"line_start":590,"line_end":590,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":71176,"byte_end":71185,"line_start":591,"line_end":591,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":71807,"byte_end":71819,"line_start":615,"line_end":615,"column_start":8,"column_end":20},"name":"contains_str","qualname":"::ext_slice::ByteSlice::contains_str","value":"fn <B> (&self, needle: B) -> bool","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns true if and only if this byte string contains the given needle.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":71790,"byte_end":71799,"line_start":614,"line_end":614,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":72285,"byte_end":72300,"line_start":633,"line_end":633,"column_start":8,"column_end":23},"name":"starts_with_str","qualname":"::ext_slice::ByteSlice::starts_with_str","value":"fn <B> (&self, prefix: B) -> bool","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns true if and only if this byte string has the given prefix.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":72268,"byte_end":72277,"line_start":632,"line_end":632,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":72777,"byte_end":72790,"line_start":651,"line_end":651,"column_start":8,"column_end":21},"name":"ends_with_str","qualname":"::ext_slice::ByteSlice::ends_with_str","value":"fn <B> (&self, suffix: B) -> bool","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns true if and only if this byte string has the given suffix.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":72760,"byte_end":72769,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":73993,"byte_end":73997,"line_start":686,"line_end":686,"column_start":8,"column_end":12},"name":"find","qualname":"::ext_slice::ByteSlice::find","value":"fn <B> (&self, needle: B) -> Option<usize>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of the given needle.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":73976,"byte_end":73985,"line_start":685,"line_end":685,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":75285,"byte_end":75290,"line_start":723,"line_end":723,"column_start":8,"column_end":13},"name":"rfind","qualname":"::ext_slice::ByteSlice::rfind","value":"fn <B> (&self, needle: B) -> Option<usize>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of the given needle.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":75268,"byte_end":75277,"line_start":722,"line_end":722,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":76663,"byte_end":76672,"line_start":765,"line_end":765,"column_start":8,"column_end":17},"name":"find_iter","qualname":"::ext_slice::ByteSlice::find_iter","value":"fn <'a, B> (&'a self, needle: &'a B) -> Find<'a>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator of the non-overlapping occurrences of the given\n needle. The iterator yields byte offset positions indicating the start\n of each match.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":76646,"byte_end":76655,"line_start":764,"line_end":764,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":78082,"byte_end":78092,"line_start":810,"line_end":810,"column_start":8,"column_end":18},"name":"rfind_iter","qualname":"::ext_slice::ByteSlice::rfind_iter","value":"fn <'a, B> (&'a self, needle: &'a B) -> FindReverse<'a>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator of the non-overlapping occurrences of the given\n needle in reverse. The iterator yields byte offset positions indicating\n the start of each match.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":78065,"byte_end":78074,"line_start":809,"line_end":809,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":78673,"byte_end":78682,"line_start":831,"line_end":831,"column_start":8,"column_end":17},"name":"find_byte","qualname":"::ext_slice::ByteSlice::find_byte","value":"fn (&self, byte: u8) -> Option<usize>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of the given byte. If the\n byte does not occur in this byte string, then `None` is returned.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":78656,"byte_end":78665,"line_start":830,"line_end":830,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":79181,"byte_end":79191,"line_start":849,"line_end":849,"column_start":8,"column_end":18},"name":"rfind_byte","qualname":"::ext_slice::ByteSlice::rfind_byte","value":"fn (&self, byte: u8) -> Option<usize>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of the given byte. If the\n byte does not occur in this byte string, then `None` is returned.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":79164,"byte_end":79173,"line_start":848,"line_end":848,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":79982,"byte_end":79991,"line_start":873,"line_end":873,"column_start":8,"column_end":17},"name":"find_char","qualname":"::ext_slice::ByteSlice::find_char","value":"fn (&self, ch: char) -> Option<usize>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of the given codepoint.\n If the codepoint does not occur in this byte string, then `None` is\n returned.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":79965,"byte_end":79974,"line_start":872,"line_end":872,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":80792,"byte_end":80802,"line_start":897,"line_end":897,"column_start":8,"column_end":18},"name":"rfind_char","qualname":"::ext_slice::ByteSlice::rfind_char","value":"fn (&self, ch: char) -> Option<usize>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of the given codepoint.\n If the codepoint does not occur in this byte string, then `None` is\n returned.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":80775,"byte_end":80784,"line_start":896,"line_end":896,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":82177,"byte_end":82189,"line_start":934,"line_end":934,"column_start":8,"column_end":20},"name":"find_byteset","qualname":"::ext_slice::ByteSlice::find_byteset","value":"fn <B> (&self, byteset: B) -> Option<usize>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of any of the bytes in the\n provided set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":82160,"byte_end":82169,"line_start":933,"line_end":933,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":83624,"byte_end":83640,"line_start":971,"line_end":971,"column_start":8,"column_end":24},"name":"find_not_byteset","qualname":"::ext_slice::ByteSlice::find_not_byteset","value":"fn <B> (&self, byteset: B) -> Option<usize>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of a byte that is not a member\n of the provided set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":83607,"byte_end":83616,"line_start":970,"line_end":970,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":85053,"byte_end":85066,"line_start":1008,"line_end":1008,"column_start":8,"column_end":21},"name":"rfind_byteset","qualname":"::ext_slice::ByteSlice::rfind_byteset","value":"fn <B> (&self, byteset: B) -> Option<usize>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of any of the bytes in the\n provided set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":85036,"byte_end":85045,"line_start":1007,"line_end":1007,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":86504,"byte_end":86521,"line_start":1045,"line_end":1045,"column_start":8,"column_end":25},"name":"rfind_not_byteset","qualname":"::ext_slice::ByteSlice::rfind_not_byteset","value":"fn <B> (&self, byteset: B) -> Option<usize>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of a byte that is not a member\n of the provided set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":86487,"byte_end":86496,"line_start":1044,"line_end":1044,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":87296,"byte_end":87302,"line_start":1072,"line_end":1072,"column_start":8,"column_end":14},"name":"fields","qualname":"::ext_slice::ByteSlice::fields","value":"fn (&self) -> Fields","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the fields in a byte string, separated by\n contiguous whitespace.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":87279,"byte_end":87288,"line_start":1071,"line_end":1071,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":88284,"byte_end":88295,"line_start":1104,"line_end":1104,"column_start":8,"column_end":19},"name":"fields_with","qualname":"::ext_slice::ByteSlice::fields_with","value":"fn <F> (&self, f: F) -> FieldsWith<F>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the fields in a byte string, separated by\n contiguous codepoints satisfying the given predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":88267,"byte_end":88276,"line_start":1103,"line_end":1103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":91522,"byte_end":91531,"line_start":1197,"line_end":1197,"column_start":8,"column_end":17},"name":"split_str","qualname":"::ext_slice::ByteSlice::split_str","value":"fn <'a, B> (&'a self, splitter: &'a B) -> Split<'a>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over substrings of this byte string, separated\n by the given byte string. Each element yielded is guaranteed not to\n include the splitter substring.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":91505,"byte_end":91514,"line_start":1196,"line_end":1196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":94751,"byte_end":94761,"line_start":1291,"line_end":1291,"column_start":8,"column_end":18},"name":"rsplit_str","qualname":"::ext_slice::ByteSlice::rsplit_str","value":"fn <'a, B> (&'a self, splitter: &'a B) -> SplitReverse<'a>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over substrings of this byte string, separated by\n the given byte string, in reverse. Each element yielded is guaranteed\n not to include the splitter substring.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":94734,"byte_end":94743,"line_start":1290,"line_end":1290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":96360,"byte_end":96370,"line_start":1334,"line_end":1334,"column_start":8,"column_end":18},"name":"splitn_str","qualname":"::ext_slice::ByteSlice::splitn_str","value":"fn <'a, B> (&'a self, limit: usize, splitter: &'a B) -> SplitN<'a>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator of at most `limit` substrings of this byte string,\n separated by the given byte string. If `limit` substrings are yielded,\n then the last substring will contain the remainder of this byte string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":96343,"byte_end":96352,"line_start":1333,"line_end":1333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":98025,"byte_end":98036,"line_start":1380,"line_end":1380,"column_start":8,"column_end":19},"name":"rsplitn_str","qualname":"::ext_slice::ByteSlice::rsplitn_str","value":"fn <'a, B> (&'a self, limit: usize, splitter: &'a B) -> SplitNReverse<'a>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator of at most `limit` substrings of this byte string,\n separated by the given byte string, in reverse. If `limit` substrings\n are yielded, then the last substring will contain the remainder of this\n byte string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":98008,"byte_end":98017,"line_start":1379,"line_end":1379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":99225,"byte_end":99232,"line_start":1424,"line_end":1424,"column_start":8,"column_end":15},"name":"replace","qualname":"::ext_slice::ByteSlice::replace","value":"fn <N, R> (&self, needle: N, replacement: R) -> Vec<u8>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Replace all matches of the given needle with the given replacement, and\n the result as a new `Vec<u8>`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":99180,"byte_end":99203,"line_start":1422,"line_end":1422,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":99208,"byte_end":99217,"line_start":1423,"line_end":1423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":100458,"byte_end":100466,"line_start":1470,"line_end":1470,"column_start":8,"column_end":16},"name":"replacen","qualname":"::ext_slice::ByteSlice::replacen","value":"fn <N, R> (&self, needle: N, replacement: R, limit: usize) -> Vec<u8>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Replace up to `limit` matches of the given needle with the given\n replacement, and the result as a new `Vec<u8>`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":100413,"byte_end":100436,"line_start":1468,"line_end":1468,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":100441,"byte_end":100450,"line_start":1469,"line_end":1469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":102017,"byte_end":102029,"line_start":1528,"line_end":1528,"column_start":8,"column_end":20},"name":"replace_into","qualname":"::ext_slice::ByteSlice::replace_into","value":"fn <N, R> (&self, needle: N, replacement: R, dest: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Replace all matches of the given needle with the given replacement,\n and write the result into the provided `Vec<u8>`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":101972,"byte_end":101995,"line_start":1526,"line_end":1526,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":102000,"byte_end":102009,"line_start":1527,"line_end":1527,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":103760,"byte_end":103773,"line_start":1592,"line_end":1592,"column_start":8,"column_end":21},"name":"replacen_into","qualname":"::ext_slice::ByteSlice::replacen_into","value":"fn <N, R> (&self, needle: N, replacement: R, limit: usize, dest: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Replace up to `limit` matches of the given needle with the given\n replacement, and write the result into the provided `Vec<u8>`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":103715,"byte_end":103738,"line_start":1590,"line_end":1590,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":103743,"byte_end":103752,"line_start":1591,"line_end":1591,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":104610,"byte_end":104615,"line_start":1624,"line_end":1624,"column_start":8,"column_end":13},"name":"bytes","qualname":"::ext_slice::ByteSlice::bytes","value":"fn (&self) -> Bytes","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the bytes in this byte string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":104593,"byte_end":104602,"line_start":1623,"line_end":1623,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":105552,"byte_end":105557,"line_start":1654,"line_end":1654,"column_start":8,"column_end":13},"name":"chars","qualname":"::ext_slice::ByteSlice::chars","value":"fn (&self) -> Chars","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the Unicode scalar values in this byte string.\n If invalid UTF-8 is encountered, then the Unicode replacement codepoint\n is yielded instead.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":105535,"byte_end":105544,"line_start":1653,"line_end":1653,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":107435,"byte_end":107447,"line_start":1709,"line_end":1709,"column_start":8,"column_end":20},"name":"char_indices","qualname":"::ext_slice::ByteSlice::char_indices","value":"fn (&self) -> CharIndices","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the Unicode scalar values in this byte string\n along with their starting and ending byte index positions. If invalid\n UTF-8 is encountered, then the Unicode replacement codepoint is yielded\n instead.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":107418,"byte_end":107427,"line_start":1708,"line_end":1708,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":108718,"byte_end":108729,"line_start":1746,"line_end":1746,"column_start":8,"column_end":19},"name":"utf8_chunks","qualname":"::ext_slice::ByteSlice::utf8_chunks","value":"fn (&self) -> Utf8Chunks","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Iterate over chunks of valid UTF-8.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":108701,"byte_end":108710,"line_start":1745,"line_end":1745,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":109775,"byte_end":109784,"line_start":1778,"line_end":1778,"column_start":8,"column_end":17},"name":"graphemes","qualname":"::ext_slice::ByteSlice::graphemes","value":"fn (&self) -> Graphemes","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the grapheme clusters in this byte string.\n If invalid UTF-8 is encountered, then the Unicode replacement codepoint\n is yielded instead.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":109726,"byte_end":109753,"line_start":1776,"line_end":1776,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":109758,"byte_end":109767,"line_start":1777,"line_end":1777,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":111303,"byte_end":111319,"line_start":1822,"line_end":1822,"column_start":8,"column_end":24},"name":"grapheme_indices","qualname":"::ext_slice::ByteSlice::grapheme_indices","value":"fn (&self) -> GraphemeIndices","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the grapheme clusters in this byte string\n along with their starting and ending byte index positions. If invalid\n UTF-8 is encountered, then the Unicode replacement codepoint is yielded\n instead.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":111254,"byte_end":111281,"line_start":1820,"line_end":1820,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":111286,"byte_end":111295,"line_start":1821,"line_end":1821,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":112687,"byte_end":112692,"line_start":1858,"line_end":1858,"column_start":8,"column_end":13},"name":"words","qualname":"::ext_slice::ByteSlice::words","value":"fn (&self) -> Words","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the words in this byte string. If invalid\n UTF-8 is encountered, then the Unicode replacement codepoint is yielded\n instead.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":112638,"byte_end":112665,"line_start":1856,"line_end":1856,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":112670,"byte_end":112679,"line_start":1857,"line_end":1857,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":114087,"byte_end":114099,"line_start":1896,"line_end":1896,"column_start":8,"column_end":20},"name":"word_indices","qualname":"::ext_slice::ByteSlice::word_indices","value":"fn (&self) -> WordIndices","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the words in this byte string along with\n their starting and ending byte index positions.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":114038,"byte_end":114065,"line_start":1894,"line_end":1894,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":114070,"byte_end":114079,"line_start":1895,"line_end":1895,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":115252,"byte_end":115269,"line_start":1926,"line_end":1926,"column_start":8,"column_end":25},"name":"words_with_breaks","qualname":"::ext_slice::ByteSlice::words_with_breaks","value":"fn (&self) -> WordsWithBreaks","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the words in this byte string, along with\n all breaks between the words. Concatenating all elements yielded by\n the iterator results in the original string (modulo Unicode replacement\n codepoint substitutions if invalid UTF-8 is encountered).","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":115203,"byte_end":115230,"line_start":1924,"line_end":1924,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":115235,"byte_end":115244,"line_start":1925,"line_end":1925,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":116543,"byte_end":116567,"line_start":1963,"line_end":1963,"column_start":8,"column_end":32},"name":"words_with_break_indices","qualname":"::ext_slice::ByteSlice::words_with_break_indices","value":"fn (&self) -> WordsWithBreakIndices","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the words and their byte offsets in this\n byte string, along with all breaks between the words. Concatenating\n all elements yielded by the iterator results in the original string\n (modulo Unicode replacement codepoint substitutions if invalid UTF-8 is\n encountered).","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":116494,"byte_end":116521,"line_start":1961,"line_end":1961,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":116526,"byte_end":116535,"line_start":1962,"line_end":1962,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":117676,"byte_end":117685,"line_start":1995,"line_end":1995,"column_start":8,"column_end":17},"name":"sentences","qualname":"::ext_slice::ByteSlice::sentences","value":"fn (&self) -> Sentences","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the sentences in this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":117627,"byte_end":117654,"line_start":1993,"line_end":1993,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":117659,"byte_end":117668,"line_start":1994,"line_end":1994,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":118900,"byte_end":118916,"line_start":2029,"line_end":2029,"column_start":8,"column_end":24},"name":"sentence_indices","qualname":"::ext_slice::ByteSlice::sentence_indices","value":"fn (&self) -> SentenceIndices","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns an iterator over the sentences in this byte string along with\n their starting and ending byte index positions.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":118851,"byte_end":118878,"line_start":2027,"line_end":2027,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":118883,"byte_end":118892,"line_start":2028,"line_end":2028,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":119606,"byte_end":119611,"line_start":2060,"line_end":2060,"column_start":8,"column_end":13},"name":"lines","qualname":"::ext_slice::ByteSlice::lines","value":"fn (&self) -> Lines","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" An iterator over all lines in a byte string, without their\n terminators.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":119589,"byte_end":119598,"line_start":2059,"line_end":2059,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":120771,"byte_end":120792,"line_start":2104,"line_end":2104,"column_start":8,"column_end":29},"name":"lines_with_terminator","qualname":"::ext_slice::ByteSlice::lines_with_terminator","value":"fn (&self) -> LinesWithTerminator","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" An iterator over all lines in a byte string, including their\n terminators.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":120754,"byte_end":120763,"line_start":2103,"line_end":2103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":121351,"byte_end":121355,"line_start":2126,"line_end":2126,"column_start":8,"column_end":12},"name":"trim","qualname":"::ext_slice::ByteSlice::trim","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Return a byte string slice with leading and trailing whitespace\n removed.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":121302,"byte_end":121329,"line_start":2124,"line_end":2124,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":121334,"byte_end":121343,"line_start":2125,"line_end":2125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":121884,"byte_end":121894,"line_start":2147,"line_end":2147,"column_start":8,"column_end":18},"name":"trim_start","qualname":"::ext_slice::ByteSlice::trim_start","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Return a byte string slice with leading whitespace removed.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":121835,"byte_end":121862,"line_start":2145,"line_end":2145,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":121867,"byte_end":121876,"line_start":2146,"line_end":2146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":122465,"byte_end":122473,"line_start":2169,"line_end":2169,"column_start":8,"column_end":16},"name":"trim_end","qualname":"::ext_slice::ByteSlice::trim_end","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Return a byte string slice with trailing whitespace removed.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":122416,"byte_end":122443,"line_start":2167,"line_end":2167,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":122448,"byte_end":122457,"line_start":2168,"line_end":2168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":122958,"byte_end":122967,"line_start":2188,"line_end":2188,"column_start":8,"column_end":17},"name":"trim_with","qualname":"::ext_slice::ByteSlice::trim_with","value":"fn <F> (&self, mut trim: F) -> &[u8]","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Return a byte string slice with leading and trailing characters\n satisfying the given predicate removed.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":122941,"byte_end":122950,"line_start":2187,"line_end":2187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":123463,"byte_end":123478,"line_start":2206,"line_end":2206,"column_start":8,"column_end":23},"name":"trim_start_with","qualname":"::ext_slice::ByteSlice::trim_start_with","value":"fn <F> (&self, mut trim: F) -> &[u8]","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Return a byte string slice with leading characters satisfying the given\n predicate removed.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":123446,"byte_end":123455,"line_start":2205,"line_end":2205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":124062,"byte_end":124075,"line_start":2229,"line_end":2229,"column_start":8,"column_end":21},"name":"trim_end_with","qualname":"::ext_slice::ByteSlice::trim_end_with","value":"fn <F> (&self, mut trim: F) -> &[u8]","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Return a byte string slice with trailing characters satisfying the\n given predicate removed.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":124045,"byte_end":124054,"line_start":2228,"line_end":2228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":125858,"byte_end":125870,"line_start":2285,"line_end":2285,"column_start":8,"column_end":20},"name":"to_lowercase","qualname":"::ext_slice::ByteSlice::to_lowercase","value":"fn (&self) -> Vec<u8>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns a new `Vec<u8>` containing the lowercase equivalent of this\n byte string.","sig":null,"attributes":[{"value":"cfg(all (feature = \"std\", feature = \"unicode\"))","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":125787,"byte_end":125836,"line_start":2283,"line_end":2283,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":125841,"byte_end":125850,"line_start":2284,"line_end":2284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":127771,"byte_end":127788,"line_start":2347,"line_end":2347,"column_start":8,"column_end":25},"name":"to_lowercase_into","qualname":"::ext_slice::ByteSlice::to_lowercase_into","value":"fn (&self, buf: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Writes the lowercase equivalent of this byte string into the given\n buffer. The buffer is not cleared before written to.","sig":null,"attributes":[{"value":"cfg(all (feature = \"std\", feature = \"unicode\"))","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":127700,"byte_end":127749,"line_start":2345,"line_end":2345,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":127754,"byte_end":127763,"line_start":2346,"line_end":2346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":129736,"byte_end":129754,"line_start":2402,"line_end":2402,"column_start":8,"column_end":26},"name":"to_ascii_lowercase","qualname":"::ext_slice::ByteSlice::to_ascii_lowercase","value":"fn (&self) -> Vec<u8>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns a new `Vec<u8>` containing the ASCII lowercase equivalent of\n this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":129691,"byte_end":129714,"line_start":2400,"line_end":2400,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":129719,"byte_end":129728,"line_start":2401,"line_end":2401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":130809,"byte_end":130829,"line_start":2437,"line_end":2437,"column_start":8,"column_end":28},"name":"make_ascii_lowercase","qualname":"::ext_slice::ByteSlice::make_ascii_lowercase","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Convert this byte string to its lowercase ASCII equivalent in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":130792,"byte_end":130801,"line_start":2436,"line_end":2436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":132410,"byte_end":132422,"line_start":2488,"line_end":2488,"column_start":8,"column_end":20},"name":"to_uppercase","qualname":"::ext_slice::ByteSlice::to_uppercase","value":"fn (&self) -> Vec<u8>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns a new `Vec<u8>` containing the uppercase equivalent of this\n byte string.","sig":null,"attributes":[{"value":"cfg(all (feature = \"std\", feature = \"unicode\"))","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":132339,"byte_end":132388,"line_start":2486,"line_end":2486,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":132393,"byte_end":132402,"line_start":2487,"line_end":2487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":134274,"byte_end":134291,"line_start":2550,"line_end":2550,"column_start":8,"column_end":25},"name":"to_uppercase_into","qualname":"::ext_slice::ByteSlice::to_uppercase_into","value":"fn (&self, buf: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Writes the uppercase equivalent of this byte string into the given\n buffer. The buffer is not cleared before written to.","sig":null,"attributes":[{"value":"cfg(all (feature = \"std\", feature = \"unicode\"))","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":134203,"byte_end":134252,"line_start":2548,"line_end":2548,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":134257,"byte_end":134266,"line_start":2549,"line_end":2549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":136150,"byte_end":136168,"line_start":2602,"line_end":2602,"column_start":8,"column_end":26},"name":"to_ascii_uppercase","qualname":"::ext_slice::ByteSlice::to_ascii_uppercase","value":"fn (&self) -> Vec<u8>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns a new `Vec<u8>` containing the ASCII uppercase equivalent of\n this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":136105,"byte_end":136128,"line_start":2600,"line_end":2600,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":136133,"byte_end":136142,"line_start":2601,"line_end":2601,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":137220,"byte_end":137240,"line_start":2637,"line_end":2637,"column_start":8,"column_end":28},"name":"make_ascii_uppercase","qualname":"::ext_slice::ByteSlice::make_ascii_uppercase","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Convert this byte string to its uppercase ASCII equivalent in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":137203,"byte_end":137212,"line_start":2636,"line_end":2636,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":138107,"byte_end":138120,"line_start":2664,"line_end":2664,"column_start":8,"column_end":21},"name":"reverse_bytes","qualname":"::ext_slice::ByteSlice::reverse_bytes","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Reverse the bytes in this string, in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":138090,"byte_end":138099,"line_start":2663,"line_end":2663,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":140525,"byte_end":140538,"line_start":2735,"line_end":2735,"column_start":8,"column_end":21},"name":"reverse_chars","qualname":"::ext_slice::ByteSlice::reverse_chars","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Reverse the codepoints in this string, in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":140508,"byte_end":140517,"line_start":2734,"line_end":2734,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":142094,"byte_end":142111,"line_start":2793,"line_end":2793,"column_start":8,"column_end":25},"name":"reverse_graphemes","qualname":"::ext_slice::ByteSlice::reverse_graphemes","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Reverse the graphemes in this string, in place.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":142045,"byte_end":142072,"line_start":2791,"line_end":2791,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":142077,"byte_end":142086,"line_start":2792,"line_end":2792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":143040,"byte_end":143048,"line_start":2828,"line_end":2828,"column_start":8,"column_end":16},"name":"is_ascii","qualname":"::ext_slice::ByteSlice::is_ascii","value":"fn (&self) -> bool","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns true if and only if every byte in this byte string is ASCII.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":143023,"byte_end":143032,"line_start":2827,"line_end":2827,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":143925,"byte_end":143932,"line_start":2856,"line_end":2856,"column_start":8,"column_end":15},"name":"is_utf8","qualname":"::ext_slice::ByteSlice::is_utf8","value":"fn (&self) -> bool","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns true if and only if the entire byte string is valid UTF-8.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":143908,"byte_end":143917,"line_start":2855,"line_end":2855,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":144522,"byte_end":144531,"line_start":2877,"line_end":2877,"column_start":8,"column_end":17},"name":"last_byte","qualname":"::ext_slice::ByteSlice::last_byte","value":"fn (&self) -> Option<u8>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns the last byte in this byte string, if it's non-empty. If this\n byte string is empty, this returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":144505,"byte_end":144514,"line_start":2876,"line_end":2876,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":145212,"byte_end":145231,"line_start":2898,"line_end":2898,"column_start":8,"column_end":27},"name":"find_non_ascii_byte","qualname":"::ext_slice::ByteSlice::find_non_ascii_byte","value":"fn (&self) -> Option<usize>","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Returns the index of the first non-ASCII byte in this byte string (if\n any such indices exist). Specifically, it returns the index of the\n first byte with a value greater than or equal to `0x80`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":145195,"byte_end":145204,"line_start":2897,"line_end":2897,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":146371,"byte_end":146386,"line_start":2933,"line_end":2933,"column_start":8,"column_end":23},"name":"copy_within_str","qualname":"::ext_slice::ByteSlice::copy_within_str","value":"fn <R> (&mut self, src: R, dest: usize) -> ()","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Copies elements from one part of the slice to another part of itself,\n where the parts may be overlapping.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":146354,"byte_end":146363,"line_start":2932,"line_end":2932,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":148861,"byte_end":148867,"line_start":2991,"line_end":2991,"column_start":12,"column_end":18},"name":"Finder","qualname":"::ext_slice::Finder","value":"Finder {  }","parent":null,"children":[{"krate":0,"index":1054}],"decl_id":null,"docs":" A single substring searcher fixed to a particular needle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":149000,"byte_end":149003,"line_start":2998,"line_end":2998,"column_start":12,"column_end":15},"name":"new","qualname":"<Finder>::new","value":"fn <B> (needle: &'a B) -> Finder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Create a new finder for the given needle.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":148979,"byte_end":148988,"line_start":2997,"line_end":2997,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":149476,"byte_end":149486,"line_start":3011,"line_end":3011,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Finder>::into_owned","value":"fn (self) -> Finder<'static>","parent":null,"children":[],"decl_id":null,"docs":" Convert this finder into its owned variant, such that it no longer\n borrows the needle.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":149427,"byte_end":149450,"line_start":3009,"line_end":3009,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":149455,"byte_end":149464,"line_start":3010,"line_end":3010,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":149970,"byte_end":149976,"line_start":3022,"line_end":3022,"column_start":12,"column_end":18},"name":"needle","qualname":"<Finder>::needle","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the needle that this finder searches for.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":149949,"byte_end":149958,"line_start":3021,"line_end":3021,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":151006,"byte_end":151010,"line_start":3054,"line_end":3054,"column_start":12,"column_end":16},"name":"find","qualname":"<Finder>::find","value":"fn <B> (&self, haystack: B) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of this needle in the given\n haystack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":150985,"byte_end":150994,"line_start":3053,"line_end":3053,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":152064,"byte_end":152077,"line_start":3076,"line_end":3076,"column_start":12,"column_end":25},"name":"FinderReverse","qualname":"::ext_slice::FinderReverse","value":"FinderReverse {  }","parent":null,"children":[{"krate":0,"index":1063}],"decl_id":null,"docs":" A single substring reverse searcher fixed to a particular needle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":152225,"byte_end":152228,"line_start":3083,"line_end":3083,"column_start":12,"column_end":15},"name":"new","qualname":"<FinderReverse>::new","value":"fn <B> (needle: &'a B) -> FinderReverse<'a>","parent":null,"children":[],"decl_id":null,"docs":" Create a new reverse finder for the given needle.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":152204,"byte_end":152213,"line_start":3082,"line_end":3082,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":152715,"byte_end":152725,"line_start":3096,"line_end":3096,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<FinderReverse>::into_owned","value":"fn (self) -> FinderReverse<'static>","parent":null,"children":[],"decl_id":null,"docs":" Convert this finder into its owned variant, such that it no longer\n borrows the needle.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":152666,"byte_end":152689,"line_start":3094,"line_end":3094,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":152694,"byte_end":152703,"line_start":3095,"line_end":3095,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":153224,"byte_end":153230,"line_start":3107,"line_end":3107,"column_start":12,"column_end":18},"name":"needle","qualname":"<FinderReverse>::needle","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the needle that this finder searches for.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":153203,"byte_end":153212,"line_start":3106,"line_end":3106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":154290,"byte_end":154295,"line_start":3139,"line_end":3139,"column_start":12,"column_end":17},"name":"rfind","qualname":"<FinderReverse>::rfind","value":"fn <B> (&self, haystack: B) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of this needle in the given\n haystack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":154269,"byte_end":154278,"line_start":3138,"line_end":3138,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":154678,"byte_end":154682,"line_start":3151,"line_end":3151,"column_start":12,"column_end":16},"name":"Find","qualname":"::ext_slice::Find","value":"Find {  }","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075}],"decl_id":null,"docs":" An iterator over non-overlapping substring matches.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":155876,"byte_end":155887,"line_start":3195,"line_end":3195,"column_start":12,"column_end":23},"name":"FindReverse","qualname":"::ext_slice::FindReverse","value":"FindReverse {  }","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084}],"decl_id":null,"docs":" An iterator over non-overlapping substring matches in reverse.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":157351,"byte_end":157356,"line_start":3251,"line_end":3251,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::ext_slice::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":1090}],"decl_id":null,"docs":" An iterator over the bytes in a byte string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":158111,"byte_end":158117,"line_start":3285,"line_end":3285,"column_start":12,"column_end":18},"name":"Fields","qualname":"::ext_slice::Fields","value":"Fields {  }","parent":null,"children":[{"krate":0,"index":1099}],"decl_id":null,"docs":" An iterator over the fields in a byte string, separated by whitespace.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":158919,"byte_end":158929,"line_start":3314,"line_end":3314,"column_start":12,"column_end":22},"name":"FieldsWith","qualname":"::ext_slice::FieldsWith","value":"FieldsWith {  }","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108}],"decl_id":null,"docs":" An iterator over fields in the byte string, separated by a predicate over\n codepoints.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":160056,"byte_end":160061,"line_start":3358,"line_end":3358,"column_start":12,"column_end":17},"name":"Split","qualname":"::ext_slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117}],"decl_id":null,"docs":" An iterator over substrings in a byte string, split by a separator.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":161884,"byte_end":161896,"line_start":3414,"line_end":3414,"column_start":12,"column_end":24},"name":"SplitReverse","qualname":"::ext_slice::SplitReverse","value":"SplitReverse {  }","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125}],"decl_id":null,"docs":" An iterator over substrings in a byte string, split by a separator, in\n reverse.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":163768,"byte_end":163774,"line_start":3471,"line_end":3471,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::ext_slice::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133}],"decl_id":null,"docs":" An iterator over at most `n` substrings in a byte string, split by a\n separator.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":164734,"byte_end":164747,"line_start":3510,"line_end":3510,"column_start":12,"column_end":25},"name":"SplitNReverse","qualname":"::ext_slice::SplitNReverse","value":"SplitNReverse {  }","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141}],"decl_id":null,"docs":" An iterator over at most `n` substrings in a byte string, split by a\n separator, in reverse.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":165728,"byte_end":165733,"line_start":3549,"line_end":3549,"column_start":12,"column_end":17},"name":"Lines","qualname":"::ext_slice::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":395}],"decl_id":null,"docs":" An iterator over all lines in a byte string, without their terminators.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":166906,"byte_end":166925,"line_start":3588,"line_end":3588,"column_start":12,"column_end":31},"name":"LinesWithTerminator","qualname":"::ext_slice::LinesWithTerminator","value":"LinesWithTerminator {  }","parent":null,"children":[{"krate":0,"index":405}],"decl_id":null,"docs":" An iterator over all lines in a byte string, including their terminators.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":169847,"byte_end":169853,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"concat","qualname":"::ext_vec::concat","value":"fn <T, I> (elements: I) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Concatenate the elements given by the iterator together into a single\n `Vec<u8>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":169830,"byte_end":169839,"line_start":33,"line_end":33,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":170530,"byte_end":170534,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"join","qualname":"::ext_vec::join","value":"fn <B, T, I> (separator: B, elements: I) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Join the elements given by the iterator with the given separator into a\n single `Vec<u8>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":170513,"byte_end":170522,"line_start":63,"line_end":63,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":171327,"byte_end":171333,"line_start":104,"line_end":104,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::ext_vec::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" Ensure that callers cannot implement `ByteSlice` by making an\n umplementable trait its super trait.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":171753,"byte_end":171760,"line_start":119,"line_end":119,"column_start":11,"column_end":18},"name":"ByteVec","qualname":"::ext_vec::ByteVec","value":"ByteVec: Sealed","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":484}],"decl_id":null,"docs":" A trait that extends `Vec<u8>` with string oriented methods.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":171993,"byte_end":171999,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"as_vec","qualname":"::ext_vec::ByteVec::as_vec","value":"fn (&self) -> &Vec<u8>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" A method for accessing the raw vector bytes of this type. This is\n always a no-op and callers shouldn't care about it. This only exists\n for making the extension trait work.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":172252,"byte_end":172262,"line_start":130,"line_end":130,"column_start":8,"column_end":18},"name":"as_vec_mut","qualname":"::ext_vec::ByteVec::as_vec_mut","value":"fn (&mut self) -> &mut Vec<u8>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" A method for accessing the raw vector bytes of this type, mutably. This\n is always a no-op and callers shouldn't care about it. This only exists\n for making the extension trait work.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":172505,"byte_end":172513,"line_start":136,"line_end":136,"column_start":8,"column_end":16},"name":"into_vec","qualname":"::ext_vec::ByteVec::into_vec","value":"fn (self) -> Vec<u8>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" A method for consuming ownership of this vector. This is always a no-op\n and callers shouldn't care about it. This only exists for making the\n extension trait work.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":172838,"byte_end":172848,"line_start":152,"line_end":152,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::ext_vec::ByteVec::from_slice","value":"fn <B> (bytes: B) -> Vec<u8>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Create a new owned byte string from the given byte slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":173475,"byte_end":173489,"line_start":175,"line_end":175,"column_start":8,"column_end":22},"name":"from_os_string","qualname":"::ext_vec::ByteVec::from_os_string","value":"fn (os_str: OsString) -> Result<Vec<u8>, OsString>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Create a new byte string from an owned OS string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":173458,"byte_end":173467,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":174636,"byte_end":174653,"line_start":214,"line_end":214,"column_start":8,"column_end":25},"name":"from_os_str_lossy","qualname":"::ext_vec::ByteVec::from_os_str_lossy","value":"fn <'a> (os_str: &'a OsStr) -> Cow<'a, [u8]>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Lossily create a new byte string from an OS string slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":174619,"byte_end":174628,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":175762,"byte_end":175775,"line_start":254,"line_end":254,"column_start":8,"column_end":21},"name":"from_path_buf","qualname":"::ext_vec::ByteVec::from_path_buf","value":"fn (path: PathBuf) -> Result<Vec<u8>, PathBuf>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Create a new byte string from an owned file path.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":175745,"byte_end":175754,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":176571,"byte_end":176586,"line_start":279,"line_end":279,"column_start":8,"column_end":23},"name":"from_path_lossy","qualname":"::ext_vec::ByteVec::from_path_lossy","value":"fn <'a> (path: &'a Path) -> Cow<'a, [u8]>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Lossily create a new byte string from a file path.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":176554,"byte_end":176563,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":177280,"byte_end":177289,"line_start":303,"line_end":303,"column_start":8,"column_end":17},"name":"push_byte","qualname":"::ext_vec::ByteVec::push_byte","value":"fn (&mut self, byte: u8) -> ()","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Appends the given byte to the end of this byte string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":177263,"byte_end":177272,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":177733,"byte_end":177742,"line_start":323,"line_end":323,"column_start":8,"column_end":17},"name":"push_char","qualname":"::ext_vec::ByteVec::push_char","value":"fn (&mut self, ch: char) -> ()","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Appends the given `char` to the end of this byte string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":177716,"byte_end":177725,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":178451,"byte_end":178459,"line_start":348,"line_end":348,"column_start":8,"column_end":16},"name":"push_str","qualname":"::ext_vec::ByteVec::push_str","value":"fn <B> (&mut self, bytes: B) -> ()","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Appends the given slice to the end of this byte string. This accepts\n any type that be converted to a `&[u8]`. This includes, but is not\n limited to, `&str`, `&BStr`, and of course, `&[u8]` itself.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":178434,"byte_end":178443,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":179975,"byte_end":179986,"line_start":393,"line_end":393,"column_start":8,"column_end":19},"name":"into_string","qualname":"::ext_vec::ByteVec::into_string","value":"fn (self) -> Result<String, FromUtf8Error>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Converts a `Vec<u8>` into a `String` if and only if this byte string is\n valid UTF-8.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":179958,"byte_end":179967,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":180896,"byte_end":180913,"line_start":423,"line_end":423,"column_start":8,"column_end":25},"name":"into_string_lossy","qualname":"::ext_vec::ByteVec::into_string_lossy","value":"fn (self) -> String","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Lossily converts a `Vec<u8>` into a `String`. If this byte string\n contains invalid UTF-8, then the invalid bytes are replaced with the\n Unicode replacement codepoint.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":180879,"byte_end":180888,"line_start":422,"line_end":422,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":182229,"byte_end":182250,"line_start":464,"line_end":464,"column_start":15,"column_end":36},"name":"into_string_unchecked","qualname":"::ext_vec::ByteVec::into_string_unchecked","value":"fn (self) -> String","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Unsafely convert this byte string into a `String`, without checking for\n valid UTF-8.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":182921,"byte_end":182935,"line_start":490,"line_end":490,"column_start":8,"column_end":22},"name":"into_os_string","qualname":"::ext_vec::ByteVec::into_os_string","value":"fn (self) -> Result<OsString, Vec<u8>>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Converts this byte string into an OS string, in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":182904,"byte_end":182913,"line_start":489,"line_end":489,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":184303,"byte_end":184323,"line_start":536,"line_end":536,"column_start":8,"column_end":28},"name":"into_os_string_lossy","qualname":"::ext_vec::ByteVec::into_os_string_lossy","value":"fn (self) -> OsString","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Lossily converts this byte string into an OS string, in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":184286,"byte_end":184295,"line_start":535,"line_end":535,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":185257,"byte_end":185270,"line_start":574,"line_end":574,"column_start":8,"column_end":21},"name":"into_path_buf","qualname":"::ext_vec::ByteVec::into_path_buf","value":"fn (self) -> Result<PathBuf, Vec<u8>>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Converts this byte string into an owned file path, in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":185240,"byte_end":185249,"line_start":573,"line_end":573,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":186202,"byte_end":186221,"line_start":603,"line_end":603,"column_start":8,"column_end":27},"name":"into_path_buf_lossy","qualname":"::ext_vec::ByteVec::into_path_buf_lossy","value":"fn (self) -> PathBuf","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Lossily converts this byte string into an owned file path, in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":186185,"byte_end":186194,"line_start":602,"line_end":602,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":187193,"byte_end":187201,"line_start":635,"line_end":635,"column_start":8,"column_end":16},"name":"pop_byte","qualname":"::ext_vec::ByteVec::pop_byte","value":"fn (&mut self) -> Option<u8>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Removes the last byte from this `Vec<u8>` and returns it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":187176,"byte_end":187185,"line_start":634,"line_end":634,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":188908,"byte_end":188916,"line_start":681,"line_end":681,"column_start":8,"column_end":16},"name":"pop_char","qualname":"::ext_vec::ByteVec::pop_char","value":"fn (&mut self) -> Option<char>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Removes the last codepoint from this `Vec<u8>` and returns it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":188891,"byte_end":188900,"line_start":680,"line_end":680,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":190168,"byte_end":190179,"line_start":725,"line_end":725,"column_start":8,"column_end":19},"name":"remove_char","qualname":"::ext_vec::ByteVec::remove_char","value":"fn (&mut self, at: usize) -> char","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Removes a `char` from this `Vec<u8>` at the given byte position and\n returns it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":190151,"byte_end":190160,"line_start":724,"line_end":724,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":191083,"byte_end":191094,"line_start":759,"line_end":759,"column_start":8,"column_end":19},"name":"insert_char","qualname":"::ext_vec::ByteVec::insert_char","value":"fn (&mut self, at: usize, ch: char) -> ()","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Inserts the given codepoint into this `Vec<u8>` at a particular byte\n position.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":191066,"byte_end":191075,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":191987,"byte_end":191997,"line_start":789,"line_end":789,"column_start":8,"column_end":18},"name":"insert_str","qualname":"::ext_vec::ByteVec::insert_str","value":"fn <B> (&mut self, at: usize, bytes: B) -> ()","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Inserts the given byte string into this byte string at a particular\n byte position.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":191970,"byte_end":191979,"line_start":788,"line_end":788,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":193990,"byte_end":194003,"line_start":841,"line_end":841,"column_start":8,"column_end":21},"name":"replace_range","qualname":"::ext_vec::ByteVec::replace_range","value":"fn <R, B> (&mut self, range: R, replace_with: B) -> ()","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Removes the specified range in this byte string and replaces it with\n the given bytes. The given bytes do not need to have the same length\n as the range provided.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":193973,"byte_end":193982,"line_start":840,"line_end":840,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":195168,"byte_end":195179,"line_start":879,"line_end":879,"column_start":8,"column_end":19},"name":"drain_bytes","qualname":"::ext_vec::ByteVec::drain_bytes","value":"fn <R> (&mut self, range: R) -> DrainBytes","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Creates a draining iterator that removes the specified range in this\n `Vec<u8>` and yields each of the removed bytes.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":195151,"byte_end":195160,"line_start":878,"line_end":878,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":195882,"byte_end":195892,"line_start":909,"line_end":909,"column_start":12,"column_end":22},"name":"DrainBytes","qualname":"::ext_vec::DrainBytes","value":"DrainBytes {  }","parent":null,"children":[{"krate":0,"index":1147}],"decl_id":null,"docs":" A draining byte oriented iterator for `Vec<u8>`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":197137,"byte_end":197150,"line_start":962,"line_end":962,"column_start":12,"column_end":25},"name":"FromUtf8Error","qualname":"::ext_vec::FromUtf8Error","value":"FromUtf8Error {  }","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153}],"decl_id":null,"docs":" An error that may occur when converting a `Vec<u8>` to a `String`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":197697,"byte_end":197705,"line_start":985,"line_end":985,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<FromUtf8Error>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the original bytes as a slice that failed to convert to a\n `String`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":197676,"byte_end":197685,"line_start":984,"line_end":984,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":198282,"byte_end":198290,"line_start":1007,"line_end":1007,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<FromUtf8Error>::into_vec","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume this error and return the original byte string that failed to\n convert to a `String`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":198261,"byte_end":198270,"line_start":1006,"line_end":1006,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":198873,"byte_end":198883,"line_start":1028,"line_end":1028,"column_start":12,"column_end":22},"name":"utf8_error","qualname":"<FromUtf8Error>::utf8_error","value":"fn (&self) -> &Utf8Error","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying UTF-8 error that occurred. This error provides\n information on the nature and location of the invalid UTF-8 detected.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":198852,"byte_end":198861,"line_start":1027,"line_end":1027,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":738},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\io.rs","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":749},{"krate":0,"index":1443},{"krate":0,"index":1446},{"krate":0,"index":751},{"krate":0,"index":755},{"krate":0,"index":756}],"decl_id":null,"docs":"Utilities for working with I/O using byte strings.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19355,"byte_end":19378,"line_start":419,"line_end":419,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\io.rs","byte_start":220602,"byte_end":220612,"line_start":18,"line_end":18,"column_start":11,"column_end":21},"name":"BufReadExt","qualname":"::io::BufReadExt","value":"BufReadExt: io::BufRead","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":747}],"decl_id":null,"docs":" An extention trait for\n [`std::io::BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html)\n which provides convenience APIs for dealing with byte strings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\io.rs","byte_start":221719,"byte_end":221729,"line_start":52,"line_end":52,"column_start":8,"column_end":18},"name":"byte_lines","qualname":"::io::BufReadExt::byte_lines","value":"fn (self) -> ByteLines<Self>","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Returns an iterator over the lines of this reader, where each line\n is represented as a byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\io.rs","byte_start":223182,"byte_end":223195,"line_start":95,"line_end":95,"column_start":8,"column_end":21},"name":"for_byte_line","qualname":"::io::BufReadExt::for_byte_line","value":"fn <F> (self, mut for_each_line: F) -> io::Result<()>","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Executes the given closure on each line in the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\io.rs","byte_start":224773,"byte_end":224802,"line_start":142,"line_end":142,"column_start":8,"column_end":37},"name":"for_byte_line_with_terminator","qualname":"::io::BufReadExt::for_byte_line_with_terminator","value":"fn <F> (mut self, mut for_each_line: F) -> io::Result<()>","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Executes the given closure on each line in the underlying reader.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\io.rs","byte_start":226974,"byte_end":226983,"line_start":207,"line_end":207,"column_start":12,"column_end":21},"name":"ByteLines","qualname":"::io::ByteLines","value":"ByteLines {  }","parent":null,"children":[{"krate":0,"index":1445}],"decl_id":null,"docs":" An iterator over lines from an instance of\n [`std::io::BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1653},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":295084,"byte_end":295093,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"Graphemes","qualname":"::unicode::grapheme::Graphemes","value":"Graphemes {  }","parent":null,"children":[{"krate":0,"index":1655}],"decl_id":null,"docs":" An iterator over grapheme clusters in a byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":295805,"byte_end":295813,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Graphemes>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":295784,"byte_end":295793,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1662},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":298196,"byte_end":298211,"line_start":120,"line_end":120,"column_start":12,"column_end":27},"name":"GraphemeIndices","qualname":"::unicode::grapheme::GraphemeIndices","value":"GraphemeIndices {  }","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666}],"decl_id":null,"docs":" An iterator over grapheme clusters in a byte string and their byte index\n positions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":299047,"byte_end":299055,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<GraphemeIndices>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":299026,"byte_end":299035,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":306899,"byte_end":306908,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Sentences","qualname":"::unicode::sentence::Sentences","value":"Sentences {  }","parent":null,"children":[{"krate":0,"index":1675}],"decl_id":null,"docs":" An iterator over sentences in a byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":307703,"byte_end":307711,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Sentences>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":307682,"byte_end":307691,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":309345,"byte_end":309360,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"SentenceIndices","qualname":"::unicode::sentence::SentenceIndices","value":"SentenceIndices {  }","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1685}],"decl_id":null,"docs":" An iterator over sentences in a byte string, along with their byte offsets.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":310228,"byte_end":310236,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<SentenceIndices>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":310207,"byte_end":310216,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":314852,"byte_end":314857,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"Words","qualname":"::unicode::word::Words","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over words in a byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":315590,"byte_end":315598,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Words>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":315569,"byte_end":315578,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":317647,"byte_end":317658,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"WordIndices","qualname":"::unicode::word::WordIndices","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over words in a byte string and their byte index positions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":318447,"byte_end":318455,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<WordIndices>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":318426,"byte_end":318435,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":319906,"byte_end":319921,"line_start":171,"line_end":171,"column_start":12,"column_end":27},"name":"WordsWithBreaks","qualname":"::unicode::word::WordsWithBreaks","value":"WordsWithBreaks {  }","parent":null,"children":[{"krate":0,"index":1714}],"decl_id":null,"docs":" An iterator over all word breaks in a byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":320763,"byte_end":320771,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<WordsWithBreaks>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":320742,"byte_end":320751,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1721},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":322727,"byte_end":322748,"line_start":250,"line_end":250,"column_start":12,"column_end":33},"name":"WordsWithBreakIndices","qualname":"::unicode::word::WordsWithBreakIndices","value":"WordsWithBreakIndices {  }","parent":null,"children":[{"krate":0,"index":1723},{"krate":0,"index":1724}],"decl_id":null,"docs":" An iterator over all word breaks in a byte string, along with their byte\n index positions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":323663,"byte_end":323671,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<WordsWithBreakIndices>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":323642,"byte_end":323651,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":330638,"byte_end":330643,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"Chars","qualname":"::utf8::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":1733}],"decl_id":null,"docs":" An iterator over Unicode scalar values in a byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":331360,"byte_end":331368,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Chars>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":331339,"byte_end":331348,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1740},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":333061,"byte_end":333072,"line_start":159,"line_end":159,"column_start":12,"column_end":23},"name":"CharIndices","qualname":"::utf8::CharIndices","value":"CharIndices {  }","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744}],"decl_id":null,"docs":" An iterator over Unicode scalar values in a byte string and their\n byte index positions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":333892,"byte_end":333900,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CharIndices>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":333871,"byte_end":333880,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1751},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":334930,"byte_end":334940,"line_start":228,"line_end":228,"column_start":12,"column_end":22},"name":"Utf8Chunks","qualname":"::utf8::Utf8Chunks","value":"Utf8Chunks {  }","parent":null,"children":[{"krate":0,"index":1753}],"decl_id":null,"docs":" An iterator over chunks of valid UTF-8 in a byte slice.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":335375,"byte_end":335384,"line_start":242,"line_end":242,"column_start":12,"column_end":21},"name":"Utf8Chunk","qualname":"::utf8::Utf8Chunk","value":"Utf8Chunk {  }","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985}],"decl_id":null,"docs":" A chunk of valid UTF-8, possibly followed by invalid UTF-8 bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":336011,"byte_end":336016,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"valid","qualname":"<Utf8Chunk>::valid","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the (possibly empty) valid UTF-8 bytes in this chunk.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":335990,"byte_end":335999,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":336769,"byte_end":336776,"line_start":280,"line_end":280,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Utf8Chunk>::invalid","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the (possibly empty) invalid UTF-8 bytes in this chunk that\n immediately follow the valid UTF-8 bytes in this chunk.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":336748,"byte_end":336757,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1760},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":340029,"byte_end":340038,"line_start":378,"line_end":378,"column_start":12,"column_end":21},"name":"Utf8Error","qualname":"::utf8::Utf8Error","value":"Utf8Error {  }","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762}],"decl_id":null,"docs":" An error that occurs when UTF-8 decoding fails.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":340728,"byte_end":340739,"line_start":403,"line_end":403,"column_start":12,"column_end":23},"name":"valid_up_to","qualname":"<Utf8Error>::valid_up_to","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte index of the position immediately following the last\n valid UTF-8 byte.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":340707,"byte_end":340716,"line_start":402,"line_end":402,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":341345,"byte_end":341354,"line_start":417,"line_end":417,"column_start":12,"column_end":21},"name":"error_len","qualname":"<Utf8Error>::error_len","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of invalid UTF-8 bytes immediately following\n the position returned by `valid_up_to`. This value is always at least\n `1`, but can be up to `3` if bytes form a valid prefix of some UTF-8\n encoded codepoint.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":341324,"byte_end":341333,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":347294,"byte_end":347300,"line_start":581,"line_end":581,"column_start":8,"column_end":14},"name":"decode","qualname":"::utf8::decode","value":"fn <B> (slice: B) -> (Option<char>, usize)","parent":null,"children":[],"decl_id":null,"docs":" UTF-8 decode a single Unicode scalar value from the beginning of a slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":347277,"byte_end":347286,"line_start":580,"line_end":580,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":351527,"byte_end":351538,"line_start":708,"line_end":708,"column_start":8,"column_end":19},"name":"decode_last","qualname":"::utf8::decode_last","value":"fn <B> (slice: B) -> (Option<char>, usize)","parent":null,"children":[],"decl_id":null,"docs":" UTF-8 decode a single Unicode scalar value from the end of a slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":351510,"byte_end":351519,"line_start":707,"line_end":707,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\bstr.rs","byte_start":33556,"byte_end":33560,"line_start":35,"line_end":35,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\bstring.rs","byte_start":35616,"byte_end":35623,"line_start":44,"line_end":44,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\cow.rs","byte_start":49571,"byte_end":49579,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\cow.rs","byte_start":49684,"byte_end":49692,"line_start":30,"line_end":30,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\cow.rs","byte_start":50691,"byte_end":50694,"line_start":61,"line_end":61,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":148912,"byte_end":148918,"line_start":2995,"line_end":2995,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":152122,"byte_end":152135,"line_start":3080,"line_end":3080,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":154797,"byte_end":154801,"line_start":3158,"line_end":3158,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":155055,"byte_end":155059,"line_start":3166,"line_end":3166,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":156132,"byte_end":156143,"line_start":3204,"line_end":3204,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":156584,"byte_end":156595,"line_start":3221,"line_end":3221,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":157417,"byte_end":157422,"line_start":3255,"line_end":3255,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":157580,"byte_end":157585,"line_start":3264,"line_end":3264,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":157730,"byte_end":157735,"line_start":3271,"line_end":3271,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":158178,"byte_end":158184,"line_start":3289,"line_end":3289,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":158332,"byte_end":158338,"line_start":3295,"line_end":3295,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":159034,"byte_end":159044,"line_start":3320,"line_end":3320,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":159227,"byte_end":159237,"line_start":3326,"line_end":3326,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":160545,"byte_end":160550,"line_start":3370,"line_end":3370,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":160752,"byte_end":160757,"line_start":3377,"line_end":3377,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":162387,"byte_end":162399,"line_start":3426,"line_end":3426,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":162629,"byte_end":162641,"line_start":3433,"line_end":3433,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":163851,"byte_end":163857,"line_start":3477,"line_end":3477,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":164099,"byte_end":164105,"line_start":3488,"line_end":3488,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":164831,"byte_end":164844,"line_start":3516,"line_end":3516,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":165101,"byte_end":165114,"line_start":3527,"line_end":3527,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":165785,"byte_end":165790,"line_start":3553,"line_end":3553,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":165925,"byte_end":165930,"line_start":3559,"line_end":3559,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":166965,"byte_end":166984,"line_start":3592,"line_end":3592,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":167117,"byte_end":167136,"line_start":3598,"line_end":3598,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":170979,"byte_end":170982,"line_start":85,"line_end":85,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":171353,"byte_end":171356,"line_start":105,"line_end":105,"column_start":17,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":195963,"byte_end":195973,"line_start":913,"line_end":913,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":196004,"byte_end":196014,"line_start":915,"line_end":915,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":196160,"byte_end":196170,"line_start":924,"line_end":924,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":196303,"byte_end":196313,"line_start":931,"line_end":931,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":197204,"byte_end":197217,"line_start":967,"line_end":967,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":198956,"byte_end":198969,"line_start":1033,"line_end":1033,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":199084,"byte_end":199097,"line_start":1040,"line_end":1040,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":202729,"byte_end":202736,"line_start":74,"line_end":74,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":202910,"byte_end":202917,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203089,"byte_end":203096,"line_start":88,"line_end":88,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203255,"byte_end":203262,"line_start":97,"line_end":97,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203403,"byte_end":203410,"line_start":104,"line_end":104,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203533,"byte_end":203540,"line_start":111,"line_end":111,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203666,"byte_end":203673,"line_start":118,"line_end":118,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203808,"byte_end":203815,"line_start":125,"line_end":125,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203954,"byte_end":203961,"line_start":132,"line_end":132,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204083,"byte_end":204087,"line_start":139,"line_end":139,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204249,"byte_end":204256,"line_start":148,"line_end":148,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204376,"byte_end":204383,"line_start":154,"line_end":154,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204528,"byte_end":204535,"line_start":161,"line_end":161,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204674,"byte_end":204677,"line_start":168,"line_end":168,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204811,"byte_end":204818,"line_start":175,"line_end":175,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204972,"byte_end":204979,"line_start":182,"line_end":182,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":205131,"byte_end":205138,"line_start":189,"line_end":189,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":205293,"byte_end":205296,"line_start":196,"line_end":196,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":205449,"byte_end":205456,"line_start":203,"line_end":203,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":205661,"byte_end":205668,"line_start":210,"line_end":210,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":205881,"byte_end":205888,"line_start":217,"line_end":217,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":206182,"byte_end":206189,"line_start":228,"line_end":228,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":206484,"byte_end":206491,"line_start":239,"line_end":239,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":206781,"byte_end":206788,"line_start":250,"line_end":250,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":207058,"byte_end":207065,"line_start":261,"line_end":261,"column_start":17,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":207093,"byte_end":207100,"line_start":263,"line_end":263,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":207558,"byte_end":207565,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":207752,"byte_end":207759,"line_start":286,"line_end":286,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":208428,"byte_end":208432,"line_start":314,"line_end":314,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":208794,"byte_end":208798,"line_start":327,"line_end":327,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":209332,"byte_end":209336,"line_start":345,"line_end":345,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":209489,"byte_end":209493,"line_start":354,"line_end":354,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":209637,"byte_end":209641,"line_start":361,"line_end":361,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":209825,"byte_end":209829,"line_start":370,"line_end":370,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":210010,"byte_end":210014,"line_start":379,"line_end":379,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":210246,"byte_end":210250,"line_start":388,"line_end":388,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":210493,"byte_end":210497,"line_start":397,"line_end":397,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":210721,"byte_end":210725,"line_start":406,"line_end":406,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":210954,"byte_end":210958,"line_start":415,"line_end":415,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":211177,"byte_end":211181,"line_start":424,"line_end":424,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":211352,"byte_end":211356,"line_start":431,"line_end":431,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":211523,"byte_end":211527,"line_start":438,"line_end":438,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":211755,"byte_end":211759,"line_start":445,"line_end":445,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":211998,"byte_end":212002,"line_start":452,"line_end":452,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":212222,"byte_end":212226,"line_start":459,"line_end":459,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":212451,"byte_end":212455,"line_start":466,"line_end":466,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":212658,"byte_end":212662,"line_start":473,"line_end":473,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":213050,"byte_end":213054,"line_start":494,"line_end":494,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":213942,"byte_end":213945,"line_start":535,"line_end":535,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":214086,"byte_end":214090,"line_start":542,"line_end":542,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":214124,"byte_end":214128,"line_start":544,"line_end":544,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":214929,"byte_end":214933,"line_start":571,"line_end":571,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":215125,"byte_end":215129,"line_start":578,"line_end":578,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":215911,"byte_end":215915,"line_start":611,"line_end":611,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":216408,"byte_end":216419,"line_start":629,"line_end":629,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":217457,"byte_end":217464,"line_start":670,"line_end":670,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":217717,"byte_end":217724,"line_start":680,"line_end":680,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":217950,"byte_end":217964,"line_start":688,"line_end":688,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\io.rs","byte_start":226625,"byte_end":226626,"line_start":196,"line_end":196,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\io.rs","byte_start":227038,"byte_end":227047,"line_start":211,"line_end":211,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\search\\prefilter.rs","byte_start":236307,"byte_end":236321,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\search\\prefilter.rs","byte_start":239441,"byte_end":239446,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\search\\twoway.rs","byte_start":253240,"byte_end":253246,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\search\\twoway.rs","byte_start":268988,"byte_end":268993,"line_start":491,"line_end":491,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\search\\twoway.rs","byte_start":271561,"byte_end":271567,"line_start":557,"line_end":557,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\search\\twoway.rs","byte_start":276710,"byte_end":276720,"line_start":685,"line_end":685,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":295130,"byte_end":295139,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":295882,"byte_end":295891,"line_start":64,"line_end":64,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":296198,"byte_end":296207,"line_start":78,"line_end":78,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":298300,"byte_end":298315,"line_start":126,"line_end":126,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":299124,"byte_end":299139,"line_start":156,"line_end":156,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":299577,"byte_end":299592,"line_start":172,"line_end":172,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":306945,"byte_end":306954,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":307780,"byte_end":307789,"line_start":56,"line_end":56,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":309423,"byte_end":309438,"line_start":98,"line_end":98,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":310305,"byte_end":310320,"line_start":128,"line_end":128,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":314894,"byte_end":314899,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":315677,"byte_end":315682,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":317701,"byte_end":317712,"line_start":106,"line_end":106,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":318534,"byte_end":318545,"line_start":137,"line_end":137,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":319958,"byte_end":319973,"line_start":175,"line_end":175,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":320840,"byte_end":320855,"line_start":208,"line_end":208,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":322811,"byte_end":322832,"line_start":255,"line_end":255,"column_start":10,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":323740,"byte_end":323761,"line_start":288,"line_end":288,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":330680,"byte_end":330685,"line_start":84,"line_end":84,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":331437,"byte_end":331442,"line_start":114,"line_end":114,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":331728,"byte_end":331733,"line_start":128,"line_end":128,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":333161,"byte_end":333172,"line_start":165,"line_end":165,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":333969,"byte_end":333980,"line_start":195,"line_end":195,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":334397,"byte_end":334408,"line_start":211,"line_end":211,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":335799,"byte_end":335808,"line_start":256,"line_end":256,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":336861,"byte_end":336871,"line_start":285,"line_end":285,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":338252,"byte_end":338262,"line_start":327,"line_end":327,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":340103,"byte_end":340112,"line_start":383,"line_end":383,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":341459,"byte_end":341468,"line_start":423,"line_end":423,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":341562,"byte_end":341571,"line_start":429,"line_end":429,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\lib.rs","byte_start":19387,"byte_end":19389,"line_start":420,"line_end":420,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":738}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\bstr.rs","byte_start":33556,"byte_end":33560,"line_start":35,"line_end":35,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\bstring.rs","byte_start":35616,"byte_end":35623,"line_start":44,"line_end":44,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\cow.rs","byte_start":49571,"byte_end":49579,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1032},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\cow.rs","byte_start":49684,"byte_end":49692,"line_start":30,"line_end":30,"column_start":10,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\cow.rs","byte_start":50691,"byte_end":50694,"line_start":61,"line_end":61,"column_start":10,"column_end":13},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":53959,"byte_end":53965,"line_start":98,"line_end":98,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":180},"to":{"krate":0,"index":182}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":148912,"byte_end":148918,"line_start":2995,"line_end":2995,"column_start":10,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":152122,"byte_end":152135,"line_start":3080,"line_end":3080,"column_start":10,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":154797,"byte_end":154801,"line_start":3158,"line_end":3158,"column_start":10,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":155055,"byte_end":155059,"line_start":3166,"line_end":3166,"column_start":23,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1070},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":156132,"byte_end":156143,"line_start":3204,"line_end":3204,"column_start":10,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":156584,"byte_end":156595,"line_start":3221,"line_end":3221,"column_start":23,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1079},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":157417,"byte_end":157422,"line_start":3255,"line_end":3255,"column_start":23,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":157580,"byte_end":157585,"line_start":3264,"line_end":3264,"column_start":34,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":157730,"byte_end":157735,"line_start":3271,"line_end":3271,"column_start":32,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":158178,"byte_end":158184,"line_start":3289,"line_end":3289,"column_start":10,"column_end":16},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":158332,"byte_end":158338,"line_start":3295,"line_end":3295,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1097},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":159034,"byte_end":159044,"line_start":3320,"line_end":3320,"column_start":34,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":159227,"byte_end":159237,"line_start":3326,"line_end":3326,"column_start":47,"column_end":57},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1103},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":160545,"byte_end":160550,"line_start":3370,"line_end":3370,"column_start":10,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":160752,"byte_end":160757,"line_start":3377,"line_end":3377,"column_start":23,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1113},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":162387,"byte_end":162399,"line_start":3426,"line_end":3426,"column_start":10,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":162629,"byte_end":162641,"line_start":3433,"line_end":3433,"column_start":23,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1121},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":163851,"byte_end":163857,"line_start":3477,"line_end":3477,"column_start":10,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":164099,"byte_end":164105,"line_start":3488,"line_end":3488,"column_start":23,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1129},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":164831,"byte_end":164844,"line_start":3516,"line_end":3516,"column_start":10,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":165101,"byte_end":165114,"line_start":3527,"line_end":3527,"column_start":23,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1137},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":165785,"byte_end":165790,"line_start":3553,"line_end":3553,"column_start":10,"column_end":15},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":165925,"byte_end":165930,"line_start":3559,"line_end":3559,"column_start":23,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":166965,"byte_end":166984,"line_start":3592,"line_end":3592,"column_start":10,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_slice.rs","byte_start":167117,"byte_end":167136,"line_start":3598,"line_end":3598,"column_start":23,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":403},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":170979,"byte_end":170982,"line_start":85,"line_end":85,"column_start":18,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":3846},"to":{"krate":0,"index":445}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":171353,"byte_end":171356,"line_start":105,"line_end":105,"column_start":17,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":3846},"to":{"krate":0,"index":443}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":171762,"byte_end":171768,"line_start":119,"line_end":119,"column_start":20,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":443},"to":{"krate":0,"index":445}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":195963,"byte_end":195973,"line_start":913,"line_end":913,"column_start":34,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1145},"to":{"krate":2,"index":4010}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":196004,"byte_end":196014,"line_start":915,"line_end":915,"column_start":23,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1145},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":196160,"byte_end":196170,"line_start":924,"line_end":924,"column_start":34,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1145},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":196303,"byte_end":196313,"line_start":931,"line_end":931,"column_start":32,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1145},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":197204,"byte_end":197217,"line_start":967,"line_end":967,"column_start":6,"column_end":19},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":198956,"byte_end":198969,"line_start":1033,"line_end":1033,"column_start":23,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1151},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\ext_vec.rs","byte_start":199084,"byte_end":199097,"line_start":1040,"line_end":1040,"column_start":23,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1151},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":202729,"byte_end":202736,"line_start":74,"line_end":74,"column_start":27,"column_end":34},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":202910,"byte_end":202917,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203089,"byte_end":203096,"line_start":88,"line_end":88,"column_start":25,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203255,"byte_end":203262,"line_start":97,"line_end":97,"column_start":28,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":1715}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203403,"byte_end":203410,"line_start":104,"line_end":104,"column_start":26,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2249}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203533,"byte_end":203540,"line_start":111,"line_end":111,"column_start":26,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2249}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203666,"byte_end":203673,"line_start":118,"line_end":118,"column_start":26,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2252}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203808,"byte_end":203815,"line_start":125,"line_end":125,"column_start":26,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2252}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":203954,"byte_end":203961,"line_start":132,"line_end":132,"column_start":27,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2325}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204083,"byte_end":204087,"line_start":139,"line_end":139,"column_start":22,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1020},"to":{"krate":5,"index":3168}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204249,"byte_end":204256,"line_start":148,"line_end":148,"column_start":22,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204376,"byte_end":204383,"line_start":154,"line_end":154,"column_start":33,"column_end":40},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204528,"byte_end":204535,"line_start":161,"line_end":161,"column_start":28,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204674,"byte_end":204677,"line_start":168,"line_end":168,"column_start":28,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":5,"index":3846},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204811,"byte_end":204818,"line_start":175,"line_end":175,"column_start":32,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":204972,"byte_end":204979,"line_start":182,"line_end":182,"column_start":27,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":205131,"byte_end":205138,"line_start":189,"line_end":189,"column_start":33,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":205293,"byte_end":205296,"line_start":196,"line_end":196,"column_start":32,"column_end":35},"kind":{"Impl":{"id":56}},"from":{"krate":5,"index":3177},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":205449,"byte_end":205456,"line_start":203,"line_end":203,"column_start":33,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":3947}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":205661,"byte_end":205668,"line_start":210,"line_end":210,"column_start":31,"column_end":38},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":3947}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":205881,"byte_end":205888,"line_start":217,"line_end":217,"column_start":40,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":3947}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":206182,"byte_end":206189,"line_start":228,"line_end":228,"column_start":41,"column_end":48},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":3947}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":206484,"byte_end":206491,"line_start":239,"line_end":239,"column_start":41,"column_end":48},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":3947}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":206781,"byte_end":206788,"line_start":250,"line_end":250,"column_start":36,"column_end":43},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":3947}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":207058,"byte_end":207065,"line_start":261,"line_end":261,"column_start":17,"column_end":24},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":207093,"byte_end":207100,"line_start":263,"line_end":263,"column_start":24,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":207558,"byte_end":207565,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2077}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":207752,"byte_end":207759,"line_start":286,"line_end":286,"column_start":18,"column_end":25},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":2066}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":208428,"byte_end":208432,"line_start":314,"line_end":314,"column_start":27,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":208794,"byte_end":208798,"line_start":327,"line_end":327,"column_start":25,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":209332,"byte_end":209336,"line_start":345,"line_end":345,"column_start":25,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":209489,"byte_end":209493,"line_start":354,"line_end":354,"column_start":28,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1715}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":209637,"byte_end":209641,"line_start":361,"line_end":361,"column_start":32,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":209825,"byte_end":209829,"line_start":370,"line_end":370,"column_start":41,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":210010,"byte_end":210014,"line_start":379,"line_end":379,"column_start":44,"column_end":48},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":210246,"byte_end":210250,"line_start":388,"line_end":388,"column_start":53,"column_end":57},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":210493,"byte_end":210497,"line_start":397,"line_end":397,"column_start":48,"column_end":52},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":210721,"byte_end":210725,"line_start":406,"line_end":406,"column_start":46,"column_end":50},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":210954,"byte_end":210958,"line_start":415,"line_end":415,"column_start":55,"column_end":59},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":211177,"byte_end":211181,"line_start":424,"line_end":424,"column_start":35,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":211352,"byte_end":211356,"line_start":431,"line_end":431,"column_start":44,"column_end":48},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":211523,"byte_end":211527,"line_start":438,"line_end":438,"column_start":47,"column_end":51},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":211755,"byte_end":211759,"line_start":445,"line_end":445,"column_start":56,"column_end":60},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":211998,"byte_end":212002,"line_start":452,"line_end":452,"column_start":51,"column_end":55},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":212222,"byte_end":212226,"line_start":459,"line_end":459,"column_start":49,"column_end":53},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":212451,"byte_end":212455,"line_start":466,"line_end":466,"column_start":58,"column_end":62},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":212658,"byte_end":212662,"line_start":473,"line_end":473,"column_start":26,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":2249}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":213050,"byte_end":213054,"line_start":494,"line_end":494,"column_start":26,"column_end":30},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":2252}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":213942,"byte_end":213945,"line_start":535,"line_end":535,"column_start":33,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":5,"index":3177},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":214086,"byte_end":214090,"line_start":542,"line_end":542,"column_start":17,"column_end":21},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":214124,"byte_end":214128,"line_start":544,"line_end":544,"column_start":30,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":214929,"byte_end":214933,"line_start":571,"line_end":571,"column_start":25,"column_end":29},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":2077}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":215125,"byte_end":215129,"line_start":578,"line_end":578,"column_start":18,"column_end":22},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":2066}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":215911,"byte_end":215915,"line_start":611,"line_end":611,"column_start":24,"column_end":28},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1020},"to":{"krate":18,"index":1637}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":216408,"byte_end":216419,"line_start":629,"line_end":629,"column_start":40,"column_end":51},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":693},"to":{"krate":18,"index":1276}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":217457,"byte_end":217464,"line_start":670,"line_end":670,"column_start":24,"column_end":31},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1025},"to":{"krate":18,"index":1637}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":217717,"byte_end":217724,"line_start":680,"line_end":680,"column_start":36,"column_end":43},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1025},"to":{"krate":18,"index":1192}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\impls.rs","byte_start":217950,"byte_end":217964,"line_start":688,"line_end":688,"column_start":40,"column_end":54},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":722},"to":{"krate":18,"index":1276}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\io.rs","byte_start":220618,"byte_end":220625,"line_start":18,"line_end":18,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2925},"to":{"krate":0,"index":742}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\io.rs","byte_start":226625,"byte_end":226626,"line_start":196,"line_end":196,"column_start":37,"column_end":38},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":750},"to":{"krate":0,"index":742}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\io.rs","byte_start":227038,"byte_end":227047,"line_start":211,"line_end":211,"column_start":35,"column_end":44},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1443},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\search\\prefilter.rs","byte_start":236307,"byte_end":236321,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\search\\prefilter.rs","byte_start":239441,"byte_end":239446,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\search\\twoway.rs","byte_start":253240,"byte_end":253246,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\search\\twoway.rs","byte_start":268988,"byte_end":268993,"line_start":491,"line_end":491,"column_start":6,"column_end":11},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\search\\twoway.rs","byte_start":271561,"byte_end":271567,"line_start":557,"line_end":557,"column_start":6,"column_end":12},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\search\\twoway.rs","byte_start":276710,"byte_end":276720,"line_start":685,"line_end":685,"column_start":6,"column_end":16},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":295130,"byte_end":295139,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":295882,"byte_end":295891,"line_start":64,"line_end":64,"column_start":23,"column_end":32},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1653},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":296198,"byte_end":296207,"line_start":78,"line_end":78,"column_start":34,"column_end":43},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1653},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":298300,"byte_end":298315,"line_start":126,"line_end":126,"column_start":10,"column_end":25},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":299124,"byte_end":299139,"line_start":156,"line_end":156,"column_start":23,"column_end":38},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1662},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\grapheme.rs","byte_start":299577,"byte_end":299592,"line_start":172,"line_end":172,"column_start":34,"column_end":49},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1662},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":306945,"byte_end":306954,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":307780,"byte_end":307789,"line_start":56,"line_end":56,"column_start":23,"column_end":32},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1673},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":309423,"byte_end":309438,"line_start":98,"line_end":98,"column_start":10,"column_end":25},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\sentence.rs","byte_start":310305,"byte_end":310320,"line_start":128,"line_end":128,"column_start":23,"column_end":38},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1682},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":314894,"byte_end":314899,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":315677,"byte_end":315682,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1692},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":317701,"byte_end":317712,"line_start":106,"line_end":106,"column_start":10,"column_end":21},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":318534,"byte_end":318545,"line_start":137,"line_end":137,"column_start":23,"column_end":34},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1702},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":319958,"byte_end":319973,"line_start":175,"line_end":175,"column_start":10,"column_end":25},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":320840,"byte_end":320855,"line_start":208,"line_end":208,"column_start":23,"column_end":38},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1712},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":322811,"byte_end":322832,"line_start":255,"line_end":255,"column_start":10,"column_end":31},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\unicode\\word.rs","byte_start":323740,"byte_end":323761,"line_start":288,"line_end":288,"column_start":23,"column_end":44},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1721},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":330680,"byte_end":330685,"line_start":84,"line_end":84,"column_start":10,"column_end":15},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":331437,"byte_end":331442,"line_start":114,"line_end":114,"column_start":23,"column_end":28},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":331728,"byte_end":331733,"line_start":128,"line_end":128,"column_start":34,"column_end":39},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":333161,"byte_end":333172,"line_start":165,"line_end":165,"column_start":10,"column_end":21},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":333969,"byte_end":333980,"line_start":195,"line_end":195,"column_start":23,"column_end":34},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1740},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":334397,"byte_end":334408,"line_start":211,"line_end":211,"column_start":34,"column_end":45},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1740},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":335799,"byte_end":335808,"line_start":256,"line_end":256,"column_start":10,"column_end":19},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":336861,"byte_end":336871,"line_start":285,"line_end":285,"column_start":23,"column_end":33},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1751},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":338252,"byte_end":338262,"line_start":327,"line_end":327,"column_start":42,"column_end":52},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1751},"to":{"krate":2,"index":4010}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":340103,"byte_end":340112,"line_start":383,"line_end":383,"column_start":6,"column_end":15},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":341459,"byte_end":341468,"line_start":423,"line_end":423,"column_start":23,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1760},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\rahul.damani\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.12\\src\\utf8.rs","byte_start":341562,"byte_end":341571,"line_start":429,"line_end":429,"column_start":23,"column_end":32},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1760},"to":{"krate":2,"index":7648}}]}